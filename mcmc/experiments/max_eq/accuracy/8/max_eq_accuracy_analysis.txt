data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/seen_1k_min_2_small_config
num iterations: 50.0
category: max_eq
label: accuracy
num test programs: 35


counter: 0
num skipped: 0
{'include': ['java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)',)): [1, -0.11419396847486496], (('DSubTree', 'java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)'), (False, False), ('java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)', 'DStop')): [49, -0.09985943743959069]}

counter: 1
num skipped: 0
{'include': ['java.io.ObjectOutputStream.close()'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree', 'java.io.ObjectOutputStream.close()'), (False, False), ('java.io.ObjectOutputStream.close()', 'java.lang.ClassLoader.getResource(java.lang.String)')): [7, -5.714524567127228], (('DSubTree', 'java.io.ObjectOutputStream.close()', 'java.lang.ClassLoader.getResource(java.lang.String)'), (False, False, False), ('java.io.ObjectOutputStream.close()', 'java.lang.ClassLoader.getResource(java.lang.String)', 'DStop')): [43, -5.41153222322464]}

counter: 2
num skipped: 0
{'include': ['java.lang.System.exit(int)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.System.exit(int)',)): [13, -0.18445654213428497], (('DSubTree', 'java.lang.System.exit(int)'), (False, False), ('java.lang.System.exit(int)', 'DStop')): [30, -5.120553569868207], (('DSubTree', 'java.lang.System.exit(int)'), (False, False), ('java.lang.System.exit(int)', 'java.lang.String.length()')): [7, -2.5795347690582275]}

counter: 3
num skipped: 0
{'include': ['java.io.File.listFiles()'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree',), (False,), ('java.io.File.listFiles()',)): [23, -1.1140809059143066], (('DSubTree', 'java.io.File.listFiles()'), (False, False), ('java.io.File.listFiles()', 'DStop')): [6, -1.4700530022382736], (('DSubTree', 'java.io.File.listFiles()', 'java.io.File.isDirectory()'), (False, False, False), ('java.io.File.listFiles()', 'java.io.File.isDirectory()', 'DStop')): [21, -1.2403431381681003]}

counter: 4
num skipped: 0
{'include': ['java.lang.System.exit(int)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.System.exit(int)',)): [3, -0.7289208769798279], (('DSubTree', 'java.lang.System.exit(int)'), (False, False), ('java.lang.System.exit(int)', 'DStop')): [47, -0.2158744065091014]}

counter: 5
num skipped: 0
{'include': ['java.sql.PreparedStatement.setInt(int,int)'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree', 'java.sql.PreparedStatement.setInt(int,int)'), (False, False), ('java.sql.PreparedStatement.setInt(int,int)', 'java.sql.PreparedStatement.execute()')): [3, -3.2011042833328247], (('DSubTree',), (False,), ('java.sql.PreparedStatement.setInt(int,int)',)): [13, -0.7302117347717285], (('DSubTree', 'java.sql.PreparedStatement.setInt(int,int)'), (False, False), ('java.sql.PreparedStatement.setInt(int,int)', 'java.sql.ResultSet.next()')): [1, -4.58581562153995], (('DSubTree', 'java.sql.PreparedStatement.setInt(int,int)'), (False, False), ('java.sql.PreparedStatement.setInt(int,int)', 'DStop')): [10, -1.7229260504245758], (('DSubTree', 'java.sql.PreparedStatement.setInt(int,int)', 'java.sql.PreparedStatement.executeUpdate()'), (False, False, False), ('java.sql.PreparedStatement.setInt(int,int)', 'java.sql.PreparedStatement.executeUpdate()', 'DStop')): [20, -1.0633437111882813], (('DSubTree', 'java.sql.PreparedStatement.setInt(int,int)'), (False, False), ('java.sql.PreparedStatement.setInt(int,int)', 'java.sql.PreparedStatement.executeUpdate()')): [3, -0.16500439308583736]}

counter: 6
num skipped: 0
{'include': ['java.lang.Integer.Integer(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.lang.Integer.Integer(java.lang.String)'), (False, False), ('java.lang.Integer.Integer(java.lang.String)', 'DStop')): [37, -0.5236104428768158], (('DSubTree',), (False,), ('java.lang.Integer.Integer(java.lang.String)',)): [13, -1.0800637006759644]}

counter: 7
num skipped: 0
{'include': ['$NOT$java.io.File.isDirectory()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('$NOT$java.io.File.isDirectory()',)): [12, -0.13265496492385864], (('DSubTree', '$NOT$java.io.File.isDirectory()'), (False, False), ('$NOT$java.io.File.isDirectory()', 'DStop')): [38, -0.06735300272703171]}

counter: 8
num skipped: 0
{'include': ['java.util.Calendar.getTime()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.util.Calendar.getTime()',)): [13, -0.42617470026016235], (('DSubTree', 'java.util.Calendar.getTime()'), (False, False), ('java.util.Calendar.getTime()', 'DStop')): [37, -0.8322805017232895]}

counter: 9
num skipped: 0
{'include': ['java.util.Hashtable<java.lang.Object,java.lang.Object>.put(java.lang.Object,java.lang.Object)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.util.Hashtable<java.lang.Object,java.lang.Object>.put(java.lang.Object,java.lang.Object)'), (False, False), ('java.util.Hashtable<java.lang.Object,java.lang.Object>.put(java.lang.Object,java.lang.Object)', 'DStop')): [50, -0.5426178369671106]}

counter: 10
num skipped: 0
{'include': ['java.awt.event.MouseEvent.getX()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.awt.event.MouseEvent.getX()',)): [28, -0.07467318326234818], (('DSubTree', 'java.awt.event.MouseEvent.getX()'), (False, False), ('java.awt.event.MouseEvent.getX()', 'DStop')): [11, -0.9257362484931946], (('DSubTree', 'java.awt.event.MouseEvent.getX()'), (False, False), ('java.awt.event.MouseEvent.getX()', 'java.awt.event.MouseEvent.getY()')): [11, -0.8650288134813309]}

counter: 11
num skipped: 0
{'include': ['java.lang.StringBuffer.StringBuffer(int)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.StringBuffer.StringBuffer(int)',)): [10, -0.2980929911136627], (('DSubTree', 'java.lang.StringBuffer.StringBuffer(int)'), (False, False), ('java.lang.StringBuffer.StringBuffer(int)', 'DStop')): [40, -0.9354060292243958]}

counter: 12
num skipped: 0
{'include': ['java.sql.ResultSet.getDate(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree',), (False,), ('java.sql.ResultSet.getDate(java.lang.String)',)): [31, -0.17388984560966492], (('DSubTree', 'java.sql.ResultSet.getDate(java.lang.String)'), (False, False), ('java.sql.ResultSet.getDate(java.lang.String)', 'DStop')): [19, -0.5459909364581108]}

counter: 13
num skipped: 0
{'include': ['java.util.regex.Matcher.matches()'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree',), (False,), ('java.util.regex.Matcher.matches()',)): [19, -3.0840516090393066], (('DSubTree', 'java.util.regex.Matcher.matches()', 'java.util.regex.Matcher.group(int)'), (False, False, False), ('java.util.regex.Matcher.matches()', 'java.util.regex.Matcher.group(int)', 'DStop')): [9, -6.45192525316088], (('DSubTree', 'java.util.regex.Matcher.matches()'), (False, False), ('java.util.regex.Matcher.matches()', 'java.util.regex.Matcher.group(int)')): [1, -0.09918462671339512], (('DSubTree', 'java.util.regex.Matcher.matches()'), (False, False), ('java.util.regex.Matcher.matches()', 'DStop')): [21, -0.17976583540439606]}

counter: 14
num skipped: 0
{'include': ['java.io.FileOutputStream.FileOutputStream(java.io.File)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.io.FileOutputStream.FileOutputStream(java.io.File)',)): [13, -1.98652184009552], (('DSubTree', 'java.io.FileOutputStream.FileOutputStream(java.io.File)'), (False, False), ('java.io.FileOutputStream.FileOutputStream(java.io.File)', 'DStop')): [37, -0.8346118703484535]}

counter: 15
num skipped: 0
{'include': ['java.lang.String.indexOf(java.lang.String,int)'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree',), (False,), ('java.lang.String.indexOf(java.lang.String,int)',)): [13, -2.141777515411377], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)'), (False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)')): [6, -2.1774790287017822], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)'), (False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)', 'DStop')): [3, -1.2392920716665685], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)'), (False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)', 'java.lang.String.indexOf(java.lang.String,int)')): [1, -2.596911896020174], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)', 'java.lang.String.indexOf(int,int)'), (False, False, False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)', 'java.lang.String.indexOf(int,int)', 'java.lang.String.indexOf(java.lang.String,int)')): [1, -6.676233747974038], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)'), (False, False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)', 'java.lang.String.indexOf(java.lang.String,int)')): [1, -6.071878872811794], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)'), (False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(int,int)')): [3, -0.722941538784653], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)'), (False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)')): [2, -3.1619504541158676], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)'), (False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)')): [11, -1.2965784147381783], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)'), (False, False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.indexOf(java.lang.String,int)')): [3, -0.25963013485306874], (('DSubTree', 'java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.charAt(int)'), (False, False, False), ('java.lang.String.indexOf(java.lang.String,int)', 'java.lang.String.charAt(int)', 'java.lang.String.indexOf(java.lang.String,int)')): [6, -3.3286726027727127]}

counter: 16
num skipped: 0
{'include': ['java.lang.StringBuffer.append(int)'], 'exclude': [], 'min_length': 1, 'max_length': 6}
{(('DSubTree',), (False,), ('java.lang.StringBuffer.append(int)',)): [15, -7.327986240386963], (('DSubTree', 'java.lang.StringBuffer.append(int)'), (False, False), ('java.lang.StringBuffer.append(int)', 'DStop')): [32, -9.023065355839208], (('DSubTree', 'java.lang.StringBuffer.append(int)'), (False, False), ('java.lang.StringBuffer.append(int)', 'java.lang.StringBuffer.append(java.lang.String)')): [3, -10.746797561645508]}

counter: 17
num skipped: 0
{'include': ['java.util.Iterator<>.hasNext()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.util.Iterator<>.hasNext()',)): [20, -1.6137657165527344], (('DSubTree', 'java.util.Iterator<>.hasNext()'), (False, False), ('java.util.Iterator<>.hasNext()', 'DStop')): [30, -1.7166834101080894]}

counter: 18
num skipped: 0
{'include': ['java.io.DataInputStream.DataInputStream(java.io.InputStream)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.io.DataInputStream.DataInputStream(java.io.InputStream)',)): [17, -2.7293128967285156], (('DSubTree', 'java.io.DataInputStream.DataInputStream(java.io.InputStream)'), (False, False), ('java.io.DataInputStream.DataInputStream(java.io.InputStream)', 'DStop')): [29, -0.628917520865798], (('DSubTree', 'java.io.DataInputStream.DataInputStream(java.io.InputStream)'), (False, False), ('java.io.DataInputStream.DataInputStream(java.io.InputStream)', 'java.lang.Throwable.printStackTrace()')): [2, -3.86672043800354], (('DSubTree', 'java.lang.Throwable.printStackTrace()'), (False, False), ('java.lang.Throwable.printStackTrace()', 'java.io.DataInputStream.DataInputStream(java.io.InputStream)')): [2, -4.351702630519867]}

counter: 19
num skipped: 0
{'include': ['java.lang.StringBuilder.StringBuilder(int)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.StringBuilder.StringBuilder(int)',)): [9, -0.1298609972000122], (('DSubTree', 'java.lang.StringBuilder.StringBuilder(int)'), (False, False), ('java.lang.StringBuilder.StringBuilder(int)', 'DStop')): [33, -0.6109002088196576], (('DSubTree', 'java.lang.StringBuilder.StringBuilder(int)'), (False, False), ('java.lang.StringBuilder.StringBuilder(int)', 'java.lang.System.getProperty(java.lang.String)')): [8, -2.215326428413391]}

counter: 20
num skipped: 0
{'include': ['java.util.Calendar.set(int,int)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.util.Calendar.set(int,int)',)): [9, -1.1592981815338135], (('DSubTree', 'java.util.Calendar.set(int,int)'), (False, False), ('java.util.Calendar.set(int,int)', 'DStop')): [16, -4.086496968753636], (('DSubTree', 'java.util.Calendar.set(int,int)'), (False, False), ('java.util.Calendar.set(int,int)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String)')): [21, -2.0372589230537415], (('DSubTree', 'java.util.Calendar.set(int,int)'), (False, False), ('java.util.Calendar.set(int,int)', 'java.util.Locale.getDefault()')): [4, -4.688490688800812]}

counter: 21
num skipped: 0
{'include': ['java.util.Enumeration.hasMoreElements()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.util.Enumeration.hasMoreElements()',)): [13, -0.741273820400238], (('DSubTree', 'java.util.Enumeration.hasMoreElements()'), (False, False), ('java.util.Enumeration.hasMoreElements()', 'DStop')): [37, -0.6401094722677954]}

counter: 22
num skipped: 0
{'include': ['java.util.TimeZone.getTimeZone(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.util.TimeZone.getTimeZone(java.lang.String)'), (False, False), ('java.util.TimeZone.getTimeZone(java.lang.String)', 'DStop')): [30, -1.548048511147499], (('DSubTree',), (False,), ('java.util.TimeZone.getTimeZone(java.lang.String)',)): [20, -0.05578915402293205]}

counter: 23
num skipped: 0
{'include': ['java.lang.Double.parseDouble(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.lang.Double.parseDouble(java.lang.String)'), (False, False), ('java.lang.Double.parseDouble(java.lang.String)', 'DStop')): [49, -3.6778519484214485], (('DSubTree',), (False,), ('java.lang.Double.parseDouble(java.lang.String)',)): [1, -3.446608304977417]}

counter: 24
num skipped: 0
{'include': ['java.util.ArrayList<java.lang.String>.ArrayList<String>(int)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.util.ArrayList<java.lang.String>.ArrayList<String>(int)'), (False, False), ('java.util.ArrayList<java.lang.String>.ArrayList<String>(int)', 'DStop')): [38, -3.1173637211322784], (('DSubTree',), (False,), ('java.util.ArrayList<java.lang.String>.ArrayList<String>(int)',)): [11, -0.694407045841217], (('DSubTree', 'java.util.ArrayList<java.lang.String>.ArrayList<String>(int)'), (False, False), ('java.util.ArrayList<java.lang.String>.ArrayList<String>(int)', '$NOT$java.lang.String.equals(java.lang.Object)')): [1, -4.7294155061244965]}

counter: 25
num skipped: 0
{'include': ['java.lang.String.indexOf(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.String.indexOf(java.lang.String)',)): [16, -1.1567623615264893], (('DSubTree', 'java.lang.String.indexOf(java.lang.String)'), (False, False), ('java.lang.String.indexOf(java.lang.String)', 'java.lang.String.length()')): [4, -0.12500868365168571], (('DSubTree', 'java.lang.String.indexOf(java.lang.String)'), (False, False), ('java.lang.String.indexOf(java.lang.String)', 'DStop')): [30, -0.7149652391672134]}

counter: 26
num skipped: 0
{'include': ['java.io.InputStream.available()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.io.InputStream.available()',)): [10, -1.5083322525024414], (('DSubTree', 'java.io.InputStream.available()'), (False, False), ('java.io.InputStream.available()', 'DStop')): [34, -1.3096157014369965], (('DSubTree', 'java.io.InputStream.available()'), (False, False), ('java.io.InputStream.available()', 'java.io.ByteArrayOutputStream.ByteArrayOutputStream(int)')): [6, -1.3538480518618599]}

counter: 27
num skipped: 0
{'include': ['java.lang.StringBuilder.StringBuilder(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.lang.StringBuilder.StringBuilder(java.lang.String)'), (False, False), ('java.lang.StringBuilder.StringBuilder(java.lang.String)', 'DStop')): [38, -2.1912081595510244], (('DSubTree',), (False,), ('java.lang.StringBuilder.StringBuilder(java.lang.String)',)): [12, -0.4745653569698334]}

counter: 28
num skipped: 0
{'include': ['java.awt.event.MouseEvent.getX()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.awt.event.MouseEvent.getX()',)): [16, -1.9145104885101318], (('DSubTree', 'java.awt.event.MouseEvent.getX()'), (False, False), ('java.awt.event.MouseEvent.getX()', 'java.awt.Point.Point(int,int)')): [5, -4.576007258147001], (('DSubTree', 'java.awt.event.MouseEvent.getX()'), (False, False), ('java.awt.event.MouseEvent.getX()', 'DStop')): [24, -0.4314204603433609], (('DSubTree', 'java.awt.event.MouseEvent.getX()'), (False, False), ('java.awt.event.MouseEvent.getX()', 'java.awt.event.MouseEvent.getY()')): [5, -0.040268981363624334]}

counter: 29
num skipped: 0
{'include': ['java.lang.StringBuilder.append(double)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.lang.StringBuilder.append(double)',)): [15, -0.5098686814308167], (('DSubTree', 'java.lang.StringBuilder.append(double)'), (False, False), ('java.lang.StringBuilder.append(double)', 'DStop')): [33, -2.6341583598405123], (('DSubTree', 'java.lang.StringBuilder.append(double)'), (False, False), ('java.lang.StringBuilder.append(double)', 'java.lang.StringBuilder.append(java.lang.String)')): [2, -1.5558697693049908]}

counter: 30
num skipped: 0
{'include': ['java.net.URLEncoder.encode(java.lang.String,java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.net.URLEncoder.encode(java.lang.String,java.lang.String)'), (False, False), ('java.net.URLEncoder.encode(java.lang.String,java.lang.String)', 'DStop')): [30, -1.1663769569713622], (('DSubTree',), (False,), ('java.net.URLEncoder.encode(java.lang.String,java.lang.String)',)): [17, -1.639603853225708], (('DSubTree', 'java.net.URLEncoder.encode(java.lang.String,java.lang.String)'), (False, False), ('java.net.URLEncoder.encode(java.lang.String,java.lang.String)', 'java.lang.String.isEmpty()')): [3, -1.7768349647521973]}

counter: 31
num skipped: 0
{'include': ['java.io.FileWriter.FileWriter(java.io.File)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.io.FileWriter.FileWriter(java.io.File)',)): [17, -2.272381067276001], (('DSubTree', 'java.io.FileWriter.FileWriter(java.io.File)'), (False, False), ('java.io.FileWriter.FileWriter(java.io.File)', 'DStop')): [29, -2.403632402420044], (('DSubTree', 'java.io.FileWriter.FileWriter(java.io.File)'), (False, False), ('java.io.FileWriter.FileWriter(java.io.File)', 'java.util.Stack<Tau_E>.Stack()')): [2, -5.588128566741943], (('DSubTree', 'java.io.FileWriter.FileWriter(java.io.File)'), (False, False), ('java.io.FileWriter.FileWriter(java.io.File)', 'java.io.BufferedWriter.BufferedWriter(java.io.Writer)')): [2, -0.12256926205009222]}

counter: 32
num skipped: 0
{'include': ['java.io.InputStreamReader.close()'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.io.InputStreamReader.close()',)): [28, -4.197744369506836], (('DSubTree', 'java.io.InputStreamReader.close()'), (False, False), ('java.io.InputStreamReader.close()', 'DStop')): [22, -1.5691040982492268]}

counter: 33
num skipped: 0
{'include': ['java.lang.Thread.Thread(java.lang.Runnable)'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree', 'java.lang.Thread.Thread(java.lang.Runnable)'), (False, False), ('java.lang.Thread.Thread(java.lang.Runnable)', 'DStop')): [40, -1.8367955969297327], (('DSubTree',), (False,), ('java.lang.Thread.Thread(java.lang.Runnable)',)): [10, -0.6852601170539856]}

counter: 34
num skipped: 0
{'include': ['java.io.FileOutputStream.write(byte[])'], 'exclude': [], 'min_length': 1, 'max_length': 3}
{(('DSubTree',), (False,), ('java.io.FileOutputStream.write(byte[])',)): [21, -0.3193274438381195], (('DSubTree', 'java.io.FileOutputStream.write(byte[])'), (False, False), ('java.io.FileOutputStream.write(byte[])', 'DStop')): [29, -3.552482094615698]}


final metrics: {'jaccard_test_set': 0.0, 'has_more_apis': 0.2742857142857143, 'relevant_additions': 0.23809523809523805, 'meets_constraints': 1.0000000000000002, 'in_set': 0.05714285714285714, 'test_set_relevant_additions': 0.22857142857142854}
