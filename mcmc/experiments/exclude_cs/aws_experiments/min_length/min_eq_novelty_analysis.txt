data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/final_novel_1k_min_2_small_config
num iterations: 50.0
category: min_eq
label: novelty
num test programs: 1000


counter: 0
num skipped: 0
{'include': ['java.awt.Graphics2D.setComposite(java.awt.Composite)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.awt.Graphics2D.setComposite(java.awt.Composite)', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.awt.Graphics2D.setComposite(java.awt.Composite)'), (False, False, False, False), ('java.awt.Graphics2D.setComposite(java.awt.Composite)', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.awt.Graphics2D.setComposite(java.awt.Composite)', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)')): [50, -0.294758141040802]}

counter: 5
num skipped: 0
{'include': ['java.util.Collections.synchronizedMap(java.util.Map)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()'), (False, False, False, False), ('java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])')): [5, -9.07487678527832], (('DSubTree', 'java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])'), (False, False, False, False, False), ('java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'DStop')): [6, -8.966161698102951], (('DSubTree', 'java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.System.currentTimeMillis()', 'java.util.UUID.randomUUID()', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])'), (False, False, False, False, False, False, False, False), ('java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.System.currentTimeMillis()', 'java.util.UUID.randomUUID()', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'DStop')): [1, -15.429289311170578], (('DSubTree', 'java.util.Collections.synchronizedMap(java.util.Map)', 'java.util.UUID.randomUUID()', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])'), (False, False, False, False, False, False, False), ('java.util.Collections.synchronizedMap(java.util.Map)', 'java.util.UUID.randomUUID()', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'DStop')): [4, -14.29262287914753], (('DSubTree', 'java.util.Collections.synchronizedMap(java.util.Map)', 'java.util.UUID.randomUUID()', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])'), (False, False, False, False, False, False, False), ('java.util.Collections.synchronizedMap(java.util.Map)', 'java.util.UUID.randomUUID()', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.System.currentTimeMillis()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.lang.String.format(java.lang.String,java.lang.Object[])')): [34, -15.994434796273708]}

counter: 10
num skipped: 0
{'include': ['java.util.WeakHashMap<Tau_K,Tau_V>.WeakHashMap(int)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.util.WeakHashMap<Tau_K,Tau_V>.WeakHashMap(int)'), (False, False), ('java.util.WeakHashMap<Tau_K,Tau_V>.WeakHashMap(int)', 'java.util.Collections.singleton(Tau_T)')): [50, -1.1775513887405396]}

counter: 15
num skipped: 0
{'include': ['java.util.Arrays.copyOf(T[],int)'], 'exclude': [], 'min_length': 6, 'max_length': inf}
{(('DSubTree', 'java.util.Arrays.copyOf(T[],int)', 'java.util.regex.Pattern.quote(java.lang.String)', 'java.lang.String.split(java.lang.String)', 'java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)'), (False, False, False, False, False), ('java.util.Arrays.copyOf(T[],int)', 'java.util.regex.Pattern.quote(java.lang.String)', 'java.lang.String.split(java.lang.String)', 'java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)', 'java.util.Arrays.sort(java.lang.Object[])')): [50, -3.584935426712036]}

counter: 20
num skipped: 0
{'include': ['java.awt.Graphics2D.draw(java.awt.Shape)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.awt.Graphics2D.draw(java.awt.Shape)', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.Throwable.getMessage()'), (False, False, False, False), ('java.awt.Graphics2D.draw(java.awt.Shape)', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.Throwable.getMessage()', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])')): [44, -11.943654417991638], (('DSubTree', 'java.awt.Graphics2D.draw(java.awt.Shape)', 'java.lang.Throwable.getMessage()', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])'), (False, False, False, False), ('java.awt.Graphics2D.draw(java.awt.Shape)', 'java.lang.Throwable.getMessage()', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])')): [3, -13.299509882926941], (('DSubTree', 'java.awt.Graphics2D.draw(java.awt.Shape)', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.Throwable.getMessage()'), (False, False, False, False, False), ('java.awt.Graphics2D.draw(java.awt.Shape)', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])', 'java.lang.Throwable.getMessage()', 'java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])')): [3, -6.346461013890803]}

counter: 25
num skipped: 0
{'include': ['java.awt.Container.getComponent(int)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.awt.Container.getComponent(int)', 'java.io.StringWriter.toString()', 'java.lang.String.valueOf(char)'), (False, False, False, False), ('java.awt.Container.getComponent(int)', 'java.io.StringWriter.toString()', 'java.lang.String.valueOf(char)', 'java.awt.Component.repaint()')): [50, -5.255929946899414]}

counter: 30
num skipped: 0
{'include': ['java.util.Date.toInstant()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.util.Date.toInstant()'), (False, False), ('java.util.Date.toInstant()', 'java.io.File.getName()')): [50, -6.904627799987793]}

counter: 35
num skipped: 0
{'include': ['java.lang.StackTraceElement.getClassName()'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.lang.StackTraceElement.getClassName()', 'java.lang.System.getProperty(java.lang.String)', 'java.lang.String.split(java.lang.String)'), (False, False, False, False), ('java.lang.StackTraceElement.getClassName()', 'java.lang.System.getProperty(java.lang.String)', 'java.lang.String.split(java.lang.String)', 'java.lang.Class.forName(java.lang.String)')): [50, -1.0875493288040161]}

counter: 40
num skipped: 0
{'include': ['java.net.DatagramSocket.isClosed()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.net.DatagramSocket.isClosed()'), (False, False), ('java.net.DatagramSocket.isClosed()', 'java.lang.RuntimeException.RuntimeException()')): [50, -8.665873527526855]}

counter: 45
num skipped: 0
{'include': ['java.lang.Class<>.getCanonicalName()'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.lang.Class<>.getCanonicalName()', 'java.lang.Throwable.printStackTrace()', 'java.lang.StringBuilder.StringBuilder(java.lang.String)'), (False, False, False, False), ('java.lang.Class<>.getCanonicalName()', 'java.lang.Throwable.printStackTrace()', 'java.lang.StringBuilder.StringBuilder(java.lang.String)', 'java.lang.Throwable.printStackTrace()')): [50, -4.853501319885254]}

counter: 50
num skipped: 0
{'include': ['java.util.Set<java.lang.Long>.add(java.lang.Long)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.util.Set<java.lang.Long>.add(java.lang.Long)'), (False, False), ('java.util.Set<java.lang.Long>.add(java.lang.Long)', 'java.lang.String.valueOf(char[])')): [50, -0.33349189162254333]}

counter: 55
num skipped: 0
{'include': ['java.io.DataOutputStream.writeByte(int)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.io.DataOutputStream.writeByte(int)'), (False, False), ('java.io.DataOutputStream.writeByte(int)', 'java.lang.String.equals(java.lang.Object)')): [50, -4.073308944702148]}

counter: 60
num skipped: 0
{'include': ['java.util.concurrent.locks.ReentrantLock.lock()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.util.concurrent.locks.ReentrantLock.lock()'), (False, False), ('java.util.concurrent.locks.ReentrantLock.lock()', 'java.lang.Long.toString(long)')): [50, -3.335057497024536]}

counter: 65
num skipped: 0
{'include': ['java.util.concurrent.atomic.AtomicInteger.AtomicInteger(int)'], 'exclude': [], 'min_length': 6, 'max_length': inf}
{(('DSubTree', 'java.util.concurrent.atomic.AtomicInteger.AtomicInteger(int)', 'java.lang.Throwable.getMessage()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.lang.Long.valueOf(long)'), (False, False, False, False, False), ('java.util.concurrent.atomic.AtomicInteger.AtomicInteger(int)', 'java.lang.Throwable.getMessage()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.lang.Long.valueOf(long)', 'java.lang.Throwable.getMessage()')): [50, -0.06107252463698387]}

counter: 70
num skipped: 0
{'include': ['javax.swing.ImageIcon.ImageIcon(java.awt.Image)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'javax.swing.ImageIcon.ImageIcon(java.awt.Image)', 'java.lang.Class<Tau_T>.getClassLoader()', 'java.awt.Dimension.Dimension(int,int)'), (False, False, False, False), ('javax.swing.ImageIcon.ImageIcon(java.awt.Image)', 'java.lang.Class<Tau_T>.getClassLoader()', 'java.awt.Dimension.Dimension(int,int)', 'java.util.Vector<java.lang.String>.Vector<String>()')): [50, -2.405459403991699]}

counter: 75
num skipped: 0
{'include': ['javax.swing.JFileChooser.JFileChooser(java.lang.String)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'javax.swing.JFileChooser.JFileChooser(java.lang.String)'), (False, False), ('javax.swing.JFileChooser.JFileChooser(java.lang.String)', 'java.lang.String.getBytes(java.lang.String)')): [50, -0.10115514695644379]}

counter: 80
num skipped: 0
{'include': ['javax.swing.text.Element.getEndOffset()'], 'exclude': [], 'min_length': 4, 'max_length': inf}
{(('DSubTree', 'javax.swing.text.Element.getEndOffset()', 'java.util.Map.put(java.lang.Object,java.lang.Object)'), (False, False, False), ('javax.swing.text.Element.getEndOffset()', 'java.util.Map.put(java.lang.Object,java.lang.Object)', 'javax.swing.text.Element.getStartOffset()')): [50, -1.7596073150634766]}

counter: 85
num skipped: 0
{'include': ['java.io.PrintStream.print(char[])'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.io.PrintStream.print(char[])'), (False, False), ('java.io.PrintStream.print(char[])', 'java.lang.String.equals(java.lang.Object)')): [50, -3.999223470687866]}

counter: 90
num skipped: 0
{'include': ['javax.swing.JLabel.setText(java.lang.String)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'javax.swing.JLabel.setText(java.lang.String)', 'java.lang.System.getProperty(java.lang.String)', 'java.io.File.File(java.lang.String)'), (False, False, False, False), ('javax.swing.JLabel.setText(java.lang.String)', 'java.lang.System.getProperty(java.lang.String)', 'java.io.File.File(java.lang.String)', 'java.lang.Thread.Thread(java.lang.Runnable)')): [50, -0.21790188550949097]}

counter: 95
num skipped: 0
{'include': ['java.awt.Graphics.dispose()'], 'exclude': [], 'min_length': 7, 'max_length': inf}
{(('DSubTree', 'java.awt.Graphics.dispose()', 'java.awt.Graphics.dispose()', 'java.io.File.File(java.lang.String)', 'java.awt.Graphics.dispose()', 'java.awt.Component.repaint()'), (False, False, False, False, False, False), ('java.awt.Graphics.dispose()', 'java.awt.Graphics.dispose()', 'java.io.File.File(java.lang.String)', 'java.awt.Graphics.dispose()', 'java.awt.Component.repaint()', 'java.lang.Throwable.printStackTrace(java.io.PrintStream)')): [50, -4.9570207595825195]}

counter: 100
num skipped: 0
{'include': ['javax.security.auth.x500.X500Principal.X500Principal(java.lang.String)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'javax.security.auth.x500.X500Principal.X500Principal(java.lang.String)'), (False, False), ('javax.security.auth.x500.X500Principal.X500Principal(java.lang.String)', 'java.lang.Thread.sleep(long)')): [50, -13.470653355121613]}

counter: 105
num skipped: 0
{'include': ['java.util.HashMap<java.lang.String,java.lang.String>.HashMap<String,String>(int)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.HashMap<java.lang.String,java.lang.String>.HashMap<String,String>(int)', 'java.lang.String.getBytes(java.lang.String)', 'java.lang.String.getBytes(java.lang.String)'), (False, False, False, False), ('java.util.HashMap<java.lang.String,java.lang.String>.HashMap<String,String>(int)', 'java.lang.String.getBytes(java.lang.String)', 'java.lang.String.getBytes(java.lang.String)', 'java.util.Map<java.lang.String,java.lang.String>.put(java.lang.String,java.lang.String)')): [50, -3.087080955505371]}

counter: 110
num skipped: 0
{'include': ['javax.swing.JComponent.getClientProperty(java.lang.Object)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'javax.swing.JComponent.getClientProperty(java.lang.Object)'), (False, False), ('javax.swing.JComponent.getClientProperty(java.lang.Object)', 'java.lang.Math.max(int,int)')): [50, -2.888017416000366]}

counter: 115
num skipped: 0
{'include': ['java.beans.PropertyDescriptor.getReadMethod()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.beans.PropertyDescriptor.getReadMethod()'), (False, False), ('java.beans.PropertyDescriptor.getReadMethod()', 'java.lang.Throwable.printStackTrace()')): [50, -1.454524278640747]}

counter: 120
num skipped: 0
{'include': ['javax.swing.JComponent.getClientProperty(java.lang.Object)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'javax.swing.JComponent.getClientProperty(java.lang.Object)'), (False, False), ('javax.swing.JComponent.getClientProperty(java.lang.Object)', 'java.lang.Boolean.valueOf(boolean)')): [50, -1.1909430027008057]}

counter: 125
num skipped: 0
{'include': ['$NOT$java.util.concurrent.CountDownLatch.await(long,java.util.concurrent.TimeUnit)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', '$NOT$java.util.concurrent.CountDownLatch.await(long,java.util.concurrent.TimeUnit)', 'java.lang.Thread.sleep(long)', 'java.lang.Throwable.printStackTrace()'), (False, False, False, False), ('$NOT$java.util.concurrent.CountDownLatch.await(long,java.util.concurrent.TimeUnit)', 'java.lang.Thread.sleep(long)', 'java.lang.Throwable.printStackTrace()', 'java.lang.Thread.sleep(long)')): [50, -3.112022876739502]}

counter: 130
num skipped: 0
{'include': ['java.io.RandomAccessFile.RandomAccessFile(java.lang.String,java.lang.String)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.io.RandomAccessFile.RandomAccessFile(java.lang.String,java.lang.String)', 'java.lang.String.String(java.lang.String)', 'java.lang.String.getBytes()'), (False, False, False, False), ('java.io.RandomAccessFile.RandomAccessFile(java.lang.String,java.lang.String)', 'java.lang.String.String(java.lang.String)', 'java.lang.String.getBytes()', 'java.lang.Thread.sleep(long)')): [50, -4.287240982055664]}

counter: 135
num skipped: 0
{'include': ['java.util.HashMap<java.lang.String,java.lang.Integer>.HashMap<String,Integer>()'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.HashMap<java.lang.String,java.lang.Integer>.HashMap<String,Integer>()', 'java.lang.String.split(java.lang.String)', 'java.lang.String.toLowerCase()'), (False, False, False, False), ('java.util.HashMap<java.lang.String,java.lang.Integer>.HashMap<String,Integer>()', 'java.lang.String.split(java.lang.String)', 'java.lang.String.toLowerCase()', 'java.lang.String.split(java.lang.String)')): [50, -0.42383477091789246]}

counter: 140
num skipped: 0
{'include': ['javax.swing.text.JTextComponent.setText(java.lang.String)'], 'exclude': [], 'min_length': 7, 'max_length': inf}
{(('DSubTree', 'javax.swing.text.JTextComponent.setText(java.lang.String)', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.setText(java.lang.String)', 'java.awt.event.ActionEvent.ActionEvent(java.lang.Object,int,java.lang.String)'), (False, False, False, False, False, False), ('javax.swing.text.JTextComponent.setText(java.lang.String)', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.setText(java.lang.String)', 'java.awt.event.ActionEvent.ActionEvent(java.lang.Object,int,java.lang.String)', 'javax.swing.text.JTextComponent.getText()')): [50, -0.06579718738794327]}

counter: 145
num skipped: 0
{'include': ['java.awt.BasicStroke.BasicStroke(float)'], 'exclude': [], 'min_length': 6, 'max_length': inf}
{(('DSubTree', 'java.awt.BasicStroke.BasicStroke(float)', 'java.lang.String.getBytes()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.awt.Graphics2D.setStroke(java.awt.Stroke)'), (False, False, False, False, False), ('java.awt.BasicStroke.BasicStroke(float)', 'java.lang.String.getBytes()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'java.awt.Graphics2D.setStroke(java.awt.Stroke)', 'java.lang.String.toCharArray()')): [50, -2.357451915740967]}

counter: 150
num skipped: 0
{'include': ['java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])', 'java.util.Arrays.asList(T[])', 'java.lang.String.split(java.lang.String)'), (False, False, False, False), ('java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])', 'java.util.Arrays.asList(T[])', 'java.lang.String.split(java.lang.String)', 'java.util.Arrays.asList(T[])')): [50, -0.014439260587096214]}

counter: 155
num skipped: 0
{'include': ['java.util.Collections.synchronizedMap(java.util.Map)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.Integer.valueOf(java.lang.String)', 'java.lang.String.replace(char,char)'), (False, False, False, False), ('java.util.Collections.synchronizedMap(java.util.Map)', 'java.lang.Integer.valueOf(java.lang.String)', 'java.lang.String.replace(char,char)', 'java.lang.String.toLowerCase(java.util.Locale)')): [50, -0.8693620562553406]}

counter: 160
num skipped: 0
{'include': ['java.lang.RuntimeException.RuntimeException()'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.lang.RuntimeException.RuntimeException()', 'java.io.File.getAbsolutePath()', 'java.util.regex.Pattern.compile(java.lang.String)'), (False, False, False, False), ('java.lang.RuntimeException.RuntimeException()', 'java.io.File.getAbsolutePath()', 'java.util.regex.Pattern.compile(java.lang.String)', 'java.io.File.File(java.lang.String)')): [50, -2.0169003009796143]}

counter: 165
num skipped: 0
{'include': ['java.awt.event.MouseEvent.getClickCount()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.awt.event.MouseEvent.getClickCount()'), (False, False), ('java.awt.event.MouseEvent.getClickCount()', 'java.lang.Math.max(int,int)')): [50, -4.544101715087891]}

counter: 170
num skipped: 0
{'include': ['java.util.WeakHashMap<Tau_K,Tau_V>.WeakHashMap(int)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.util.WeakHashMap<Tau_K,Tau_V>.WeakHashMap(int)'), (False, False), ('java.util.WeakHashMap<Tau_K,Tau_V>.WeakHashMap(int)', 'java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)')): [50, -1.4838687181472778]}

counter: 175
num skipped: 0
{'include': ['java.util.Hashtable.Hashtable(int)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.util.Hashtable.Hashtable(int)'), (False, False), ('java.util.Hashtable.Hashtable(int)', 'java.lang.String.valueOf(char[])')): [50, -4.658587455749512]}
