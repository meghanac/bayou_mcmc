data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/final_novel_1k_min_2_small_config
num iterations: 50.0
category: min_eq
label: novelty
num test programs: 10


counter: 0
num skipped: 0
{'include': ['java.awt.Color.darker()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.awt.Color.darker()'), (False, False), ('java.awt.Color.darker()', 'javax.swing.JComponent.getHeight()')): [50, -2.270883321762085]}

counter: 1
num skipped: 0
{'include': ['javax.swing.text.JTextComponent.setText(java.lang.String)'], 'exclude': [], 'min_length': 7, 'max_length': inf}
{(('DSubTree', 'javax.swing.text.JTextComponent.setText(java.lang.String)', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()'), (False, False, False, False, False, False), ('javax.swing.text.JTextComponent.setText(java.lang.String)', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()', 'javax.swing.text.JTextComponent.getText()')): [50, -2.6088879108428955]}

counter: 2
num skipped: 0
{'include': ['java.security.AccessController.doPrivileged(java.security.PrivilegedAction)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.security.AccessController.doPrivileged(java.security.PrivilegedAction)', 'java.lang.Throwable.toString()', 'java.lang.Throwable.printStackTrace()'), (False, False, False, False), ('java.security.AccessController.doPrivileged(java.security.PrivilegedAction)', 'java.lang.Throwable.toString()', 'java.lang.Throwable.printStackTrace()', 'java.lang.Throwable.toString()')): [50, -0.9256835579872131]}

counter: 3
num skipped: 0
{'include': ['javax.swing.tree.DefaultMutableTreeNode.DefaultMutableTreeNode(java.lang.Object)'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'javax.swing.tree.DefaultMutableTreeNode.DefaultMutableTreeNode(java.lang.Object)'), (False, False), ('javax.swing.tree.DefaultMutableTreeNode.DefaultMutableTreeNode(java.lang.Object)', 'java.util.List<>.size()')): [50, -0.18187446892261505]}

counter: 4
num skipped: 0
{'include': ['java.beans.PropertyDescriptor.getReadMethod()'], 'exclude': [], 'min_length': 3, 'max_length': inf}
{(('DSubTree', 'java.beans.PropertyDescriptor.getReadMethod()'), (False, False), ('java.beans.PropertyDescriptor.getReadMethod()', 'java.lang.String.valueOf(char[])')): [50, -0.5962130427360535]}

counter: 5
num skipped: 0
{'include': ['java.util.Random.nextLong()'], 'exclude': [], 'min_length': 6, 'max_length': inf}
{(('DSubTree', 'java.util.Random.nextLong()', 'java.lang.Thread.getName()', 'java.lang.StringBuffer.StringBuffer(int)', 'java.lang.Thread.getName()'), (False, False, False, False, False), ('java.util.Random.nextLong()', 'java.lang.Thread.getName()', 'java.lang.StringBuffer.StringBuffer(int)', 'java.lang.Thread.getName()', 'java.lang.Long.toString(long)')): [50, -5.932205677032471]}

counter: 6
num skipped: 0
{'include': ['java.lang.Float.valueOf(float)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.lang.Float.valueOf(float)', 'java.lang.System.currentTimeMillis()', 'java.lang.String.valueOf(double)'), (False, False, False, False), ('java.lang.Float.valueOf(float)', 'java.lang.System.currentTimeMillis()', 'java.lang.String.valueOf(double)', 'java.lang.System.currentTimeMillis()')): [50, -1.979151725769043]}

counter: 7
num skipped: 0
{'include': ['java.util.List.remove(java.lang.Object)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.List.remove(java.lang.Object)', 'java.io.File.File(java.lang.String)', 'java.io.File.getAbsolutePath()'), (False, False, False, False), ('java.util.List.remove(java.lang.Object)', 'java.io.File.File(java.lang.String)', 'java.io.File.getAbsolutePath()', 'java.util.List.size()')): [50, -5.277455806732178]}

counter: 8
num skipped: 0
{'include': ['java.io.BufferedInputStream.BufferedInputStream(java.io.InputStream,int)'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.io.BufferedInputStream.BufferedInputStream(java.io.InputStream,int)', 'java.io.InputStream.close()', 'java.io.FileOutputStream.FileOutputStream(java.io.File)'), (False, False, False, False), ('java.io.BufferedInputStream.BufferedInputStream(java.io.InputStream,int)', 'java.io.InputStream.close()', 'java.io.FileOutputStream.FileOutputStream(java.io.File)', 'java.io.OutputStream.close()')): [50, -0.23513948917388916]}

counter: 9
num skipped: 0
{'include': ['java.util.TimeZone.getDefault()'], 'exclude': [], 'min_length': 5, 'max_length': inf}
{(('DSubTree', 'java.util.TimeZone.getDefault()', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.TimeZone.getTimeZone(java.lang.String)'), (False, False, False, False), ('java.util.TimeZone.getDefault()', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.TimeZone.getTimeZone(java.lang.String)', 'java.util.Date.Date()')): [50, -6.6365509033203125]}


final metrics: {'jaccard_test_set': 0.0, 'has_more_apis': 0.9999999999999999, 'relevant_additions': 0.5166666666666666, 'meets_constraints': 0.0, 'in_set': 0.0, 'test_set_relevant_additions': 0.5}
