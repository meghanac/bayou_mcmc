data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/final_novel_1k_min_2_small_config
num iterations: 50.0
category: include_api
label: novelty
num test programs: 10


counter: 0
num skipped: 0
{'include': ['java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getLong(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.sql.ResultSet.getDate(java.lang.String)'), (False, False), ('java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getLong(java.lang.String)')): [15, -9.65011540800333], (('DSubTree', 'java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getString(java.lang.String)', 'java.sql.ResultSet.getDate(java.lang.String)'), (False, False, False, False), ('java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getString(java.lang.String)', 'java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getLong(java.lang.String)')): [5, -13.871097207069397], (('DSubTree', 'java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getString(java.lang.String)'), (False, False, False), ('java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getString(java.lang.String)', 'java.sql.ResultSet.getLong(java.lang.String)')): [11, -8.24033111333847], (('DSubTree', 'java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getString(java.lang.String)', 'java.lang.Long.parseLong(java.lang.String)'), (False, False, False, False), ('java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.getString(java.lang.String)', 'java.lang.Long.parseLong(java.lang.String)', 'java.sql.ResultSet.getLong(java.lang.String)')): [10, -11.107139229774475], (('DSubTree', 'java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.next()', 'java.sql.ResultSet.getString(java.lang.String)'), (False, False, False, False), ('java.sql.ResultSet.getDate(java.lang.String)', 'java.sql.ResultSet.next()', 'java.sql.ResultSet.getString(java.lang.String)', 'java.sql.ResultSet.getLong(java.lang.String)')): [9, -8.622739553451538]}

counter: 1
num skipped: 0
{'include': ['java.security.Signature.getInstance(java.lang.String,java.security.Provider)', 'java.security.Signature.initVerify(java.security.PublicKey)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)'), (False, False), ('java.security.Signature.getInstance(java.lang.String,java.security.Provider)', 'java.security.Signature.initVerify(java.security.PublicKey)')): [3, -37.72590923309326], (('DSubTree', 'java.security.Signature.initVerify(java.security.PublicKey)'), (False, False), ('java.security.Signature.initVerify(java.security.PublicKey)', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)')): [4, -25.75530034303665], (('DSubTree', 'java.security.Signature.initVerify(java.security.PublicKey)', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)'), (False, False, False), ('java.security.Signature.initVerify(java.security.PublicKey)', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)', 'DStop')): [33, -26.48709491454065], (('DSubTree', 'java.security.Signature.initVerify(java.security.PublicKey)', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)'), (False, False, False, False), ('java.security.Signature.initVerify(java.security.PublicKey)', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)', 'DStop')): [8, -25.60645431280136], (('DSubTree', 'java.security.Signature.initVerify(java.security.PublicKey)', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.io.File.getPath()', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)'), (False, False, False, False, False), ('java.security.Signature.initVerify(java.security.PublicKey)', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.io.File.getPath()', 'java.security.Signature.getInstance(java.lang.String,java.security.Provider)', 'DStop')): [2, -27.348941253498197]}

counter: 2
num skipped: 0
{'include': ['java.lang.Class.getDeclaredField(java.lang.String)', 'java.lang.reflect.Field.get(java.lang.Object)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.lang.Class.getDeclaredField(java.lang.String)', 'java.lang.reflect.AccessibleObject.setAccessible(boolean)'), (False, False, False), ('java.lang.Class.getDeclaredField(java.lang.String)', 'java.lang.reflect.AccessibleObject.setAccessible(boolean)', 'java.lang.reflect.Field.get(java.lang.Object)')): [50, -5.033070169389248]}

counter: 3
num skipped: 0
{'include': ['java.net.ServerSocket.setReuseAddress(boolean)', 'java.net.ServerSocket.close()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.net.ServerSocket.setReuseAddress(boolean)'), (False, False), ('java.net.ServerSocket.setReuseAddress(boolean)', 'java.net.ServerSocket.close()')): [14, -35.47584676742554], (('DSubTree', 'java.net.ServerSocket.close()'), (False, False), ('java.net.ServerSocket.close()', 'java.net.ServerSocket.setReuseAddress(boolean)')): [36, -25.65099287033081]}

counter: 4
num skipped: 0
{'include': ['java.lang.Math.min(int,int)', 'java.util.Arrays.fill(int[],int)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.lang.Math.min(int,int)'), (False, False), ('java.lang.Math.min(int,int)', 'java.util.Arrays.fill(int[],int)')): [6, -10.981344223022461], (('DSubTree', 'java.lang.Math.min(int,int)', 'java.util.Arrays.fill(int[],int)'), (False, False, False), ('java.lang.Math.min(int,int)', 'java.util.Arrays.fill(int[],int)', 'DStop')): [44, -2.630143047310412]}

counter: 5
num skipped: 0
{'include': ['java.math.BigInteger.BigInteger(java.lang.String)', 'java.math.BigInteger.intValue()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.math.BigInteger.BigInteger(java.lang.String)'), (False, False), ('java.math.BigInteger.BigInteger(java.lang.String)', 'java.math.BigInteger.intValue()')): [4, -11.591854888945818], (('DSubTree', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.math.BigInteger.intValue()'), (False, False, False), ('java.math.BigInteger.BigInteger(java.lang.String)', 'java.math.BigInteger.intValue()', 'DStop')): [3, -10.924236890779866], (('DSubTree', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.util.Arrays.asList(T[])', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String)', 'java.math.BigInteger.intValue()'), (False, False, False, False, False, False), ('java.math.BigInteger.BigInteger(java.lang.String)', 'java.util.Arrays.asList(T[])', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String)', 'java.math.BigInteger.intValue()', 'DStop')): [31, -16.52042862540111], (('DSubTree', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.util.Arrays.asList(T[])', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.math.BigInteger.intValue()'), (False, False, False, False, False), ('java.math.BigInteger.BigInteger(java.lang.String)', 'java.util.Arrays.asList(T[])', 'java.math.BigInteger.BigInteger(java.lang.String)', 'java.math.BigInteger.intValue()', 'DStop')): [12, -12.285140841268003]}

counter: 6
num skipped: 0
{'include': ['java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.util.LinkedList<java.lang.String>.LinkedList<String>()'), (False, False), ('java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()')): [28, -5.003261417150497], (('DSubTree', 'java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()'), (False, False, False), ('java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()', 'DStop')): [8, -6.843859478831291], (('DSubTree', 'java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.util.ArrayList<java.lang.String>.ArrayList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()'), (False, False, False, False), ('java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.util.ArrayList<java.lang.String>.ArrayList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()', 'DStop')): [6, -9.30733898282051], (('DSubTree', 'java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.lang.System.getProperty(java.lang.String,java.lang.String)', 'java.util.ArrayList<java.lang.String>.ArrayList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()'), (False, False, False, False, False), ('java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.lang.System.getProperty(java.lang.String,java.lang.String)', 'java.util.ArrayList<java.lang.String>.ArrayList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()', 'DStop')): [5, -15.272499471902847], (('DSubTree', 'java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.lang.System.getProperty(java.lang.String,java.lang.String)', 'java.util.ArrayList<java.lang.String>.ArrayList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()', 'java.util.List<java.lang.String>.size()'), (False, False, False, False, False, False), ('java.util.LinkedList<java.lang.String>.LinkedList<String>()', 'java.lang.System.getProperty(java.lang.String,java.lang.String)', 'java.util.ArrayList<java.lang.String>.ArrayList<String>()', 'java.util.Vector<java.lang.String>.Vector<String>()', 'java.util.List<java.lang.String>.size()', 'DStop')): [3, -19.118745416402817]}

counter: 7
num skipped: 0
{'include': ['java.awt.image.BufferedImage.setRGB(int,int,int)', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.awt.image.BufferedImage.setRGB(int,int,int)'), (False, False), ('java.awt.image.BufferedImage.setRGB(int,int,int)', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)')): [2, -26.55254077911377], (('DSubTree', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)'), (False, False), ('javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.setRGB(int,int,int)')): [8, -23.210960388183594], (('DSubTree', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.setRGB(int,int,int)'), (False, False, False), ('javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.setRGB(int,int,int)', 'DStop')): [15, -20.251396449748427], (('DSubTree', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.BufferedImage(int,int,int)', 'java.awt.image.BufferedImage.setRGB(int,int,int)'), (False, False, False, False), ('javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.BufferedImage(int,int,int)', 'java.awt.image.BufferedImage.setRGB(int,int,int)', 'DStop')): [9, -14.282108705490828], (('DSubTree', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.BufferedImage(int,int,int)'), (False, False, False), ('javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.BufferedImage(int,int,int)', 'java.awt.image.BufferedImage.setRGB(int,int,int)')): [2, -11.925832867622375], (('DSubTree', 'javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.BufferedImage(int,int,int)', 'java.awt.image.BufferedImage.setRGB(int,int,int)', 'java.io.File.File(java.io.File,java.lang.String)'), (False, False, False, False, False), ('javax.imageio.ImageIO.write(java.awt.image.RenderedImage,java.lang.String,java.io.File)', 'java.awt.image.BufferedImage.BufferedImage(int,int,int)', 'java.awt.image.BufferedImage.setRGB(int,int,int)', 'java.io.File.File(java.io.File,java.lang.String)', 'DStop')): [14, -18.176940590143204]}

counter: 8
num skipped: 0
{'include': ['java.nio.ByteBuffer.allocate(int)', 'java.nio.ByteBuffer.array()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.nio.ByteBuffer.allocate(int)'), (False, False), ('java.nio.ByteBuffer.allocate(int)', 'java.nio.ByteBuffer.array()')): [6, -8.629127979278564], (('DSubTree', 'java.nio.ByteBuffer.allocate(int)', 'java.nio.ByteBuffer.order(java.nio.ByteOrder)'), (False, False, False), ('java.nio.ByteBuffer.allocate(int)', 'java.nio.ByteBuffer.order(java.nio.ByteOrder)', 'java.nio.ByteBuffer.array()')): [17, -5.936020374298096], (('DSubTree', 'java.nio.ByteBuffer.allocate(int)', 'java.nio.ByteBuffer.order(java.nio.ByteOrder)', 'java.nio.ByteBuffer.array()'), (False, False, False, False), ('java.nio.ByteBuffer.allocate(int)', 'java.nio.ByteBuffer.order(java.nio.ByteOrder)', 'java.nio.ByteBuffer.array()', 'DStop')): [27, -5.269552729092538]}

counter: 9
num skipped: 0
{'include': ['java.util.StringTokenizer.nextToken()', 'java.lang.StringBuffer.toString()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.util.StringTokenizer.nextToken()', 'java.lang.StringBuffer.append(java.lang.Object)'), (False, False, False), ('java.util.StringTokenizer.nextToken()', 'java.lang.StringBuffer.append(java.lang.Object)', 'java.lang.StringBuffer.toString()')): [14, -17.635533213615417], (('DSubTree', 'java.util.StringTokenizer.nextToken()'), (False, False), ('java.util.StringTokenizer.nextToken()', 'java.lang.StringBuffer.toString()')): [8, -12.656889915466309], (('DSubTree', 'java.lang.StringBuffer.toString()'), (False, False), ('java.lang.StringBuffer.toString()', 'java.util.StringTokenizer.nextToken()')): [6, -17.472437858581543], (('DSubTree', 'java.lang.StringBuffer.toString()', 'java.util.StringTokenizer.nextToken()'), (False, False, False), ('java.lang.StringBuffer.toString()', 'java.util.StringTokenizer.nextToken()', 'DStop')): [9, -14.809166669845581], (('DSubTree', 'java.lang.StringBuffer.toString()', 'java.util.StringTokenizer.nextToken()', 'java.lang.String.equals(java.lang.Object)'), (False, False, False, False), ('java.lang.StringBuffer.toString()', 'java.util.StringTokenizer.nextToken()', 'java.lang.String.equals(java.lang.Object)', 'DStop')): [13, -14.678512319922447]}


final metrics: {'jaccard_test_set': 0.0, 'has_more_apis': 0.7999999999999999, 'relevant_additions': 0.6305555555555555, 'meets_constraints': 0.9999999999999999, 'in_set': 0.1, 'test_set_relevant_additions': 0.6555555555555554}
