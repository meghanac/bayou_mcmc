
Model: new_1k_vocab_min_3-600000
Date: 2020-07-16 15:44:52.666038
Number of MCMC Steps: 330
Proposal Probabilities: {INSERT: 0.3, DELETE: 0.2, SWAP: 0.1, REPLACE: 0.2, ADD_DNODE: 0.0, GROW_CONST: 0.2}
Grow Constraint grow_new_subtree=True

-----------------------------------------------------------------------------
Constraints: ['java.util.ArrayList<Tau_E>.ArrayList()']   # top occurring api
Nodes:['DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()']
Edges:(False, False, True, True)
Targets:['java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.Class<>.newInstance()']
Formal Parameters:['DSubTree', '__UDT__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['__UDT__']
Total accepted transformations:44
Total rejected transformations:150
Total valid transformations:194
Total invalid transformations:135
Total attempted add transforms:103
Total accepted add transforms:3
Total attempted delete transforms:66
Total accepted delete transforms:3
Total attempted swap transforms:37
Total accepted swap transforms:1
Posterior Distribution:
	('DSubTree',)
	(False,)
	('java.util.ArrayList<Tau_E>.ArrayList()',)
	3

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.BufferedReader.readLine()', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.BufferedReader.readLine()', 'DStop', 'DStop')
	14

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'DStop', 'DStop')
	17

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'DStop', 'DStop')
	78

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'java.lang.String.substring(int)', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.util.HashSet<java.lang.String>.HashSet<String>()', 'java.lang.String.substring(int)', 'DStop', 'DStop')
	21

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Throwable.getLocalizedMessage()', 'java.lang.String.toLowerCase()', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Throwable.getLocalizedMessage()', 'java.lang.String.toLowerCase()', 'DStop', 'DStop')
	25

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.StringBuffer.StringBuffer()', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.StringBuffer.StringBuffer()', 'DStop', 'DStop')
	4

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.String.valueOf(double)', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.String.valueOf(double)', 'DStop', 'DStop')
	6

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.util.List<java.lang.String>.get(int)', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.util.List<java.lang.String>.get(int)', 'DStop', 'DStop')
	11

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'DExcept')
	(False, False, True, True, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.util.List<java.lang.String>.get(int)', 'DStop')
	15

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.util.Properties.getProperty(java.lang.String,java.lang.String)', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.util.Properties.getProperty(java.lang.String,java.lang.String)', 'DStop', 'DStop')
	17

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'DExcept')
	(False, False, True, True, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.util.Properties.getProperty(java.lang.String,java.lang.String)', 'DStop')
	26

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])', 'DStop', 'DStop')
	51

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'DExcept')
	(False, False, True, True, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])', 'DStop')
	21

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'DExcept')
	(False, False, True, True, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.Class<>.newInstance()', 'DStop')
	13

	('DSubTree', 'java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.Class<>.newInstance()', 'DExcept')
	(False, False, True, True, False, False)
	('java.util.ArrayList<Tau_E>.ArrayList()', 'DExcept', 'java.lang.Class<>.getCanonicalName()', 'java.lang.Class<>.newInstance()', 'DStop', 'DStop')
	8


APIs that occur with 'java.util.ArrayList<Tau_E>.ArrayList()' = ['DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.BufferedReader.readLine()',  'java.util.HashSet<java.lang.String>.HashSet<String>()', 'java.lang.String.substring(int)', 'java.lang.Throwable.getLocalizedMessage()', 'java.lang.Class<>.getCanonicalName()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])'. 'java.lang.Class<>.newInstance()', 'java.util.Properties.getProperty(java.lang.String,java.lang.String)', 'java.lang.String.valueOf(double)']


-----------------------------------------------------------------------------
Constraints: ['java.sql.PreparedStatement.execute()']  # mid occurring api
Nodes:['DSubTree', 'java.sql.PreparedStatement.execute()', 'DExcept', 'java.lang.Throwable.getMessage()']
Edges:(False, False, True, True)
Targets:['java.sql.PreparedStatement.execute()', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.sql.Statement.close()']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:77
Total rejected transformations:120
Total valid transformations:197
Total invalid transformations:132
Total attempted add transforms:99
Total accepted add transforms:4
Total attempted delete transforms:71
Total accepted delete transforms:6
Total attempted swap transforms:29
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree',)
	(False,)
	('java.sql.PreparedStatement.execute()',)
	4

	('DSubTree', 'java.sql.PreparedStatement.execute()', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.sql.Statement.close()', 'DExcept')
	(False, False, True, True, False, False)
	('java.sql.PreparedStatement.execute()', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.sql.Statement.close()', 'DStop', 'DStop')
	289

	('DSubTree', 'java.sql.PreparedStatement.execute()', 'DExcept', 'java.lang.Throwable.getMessage()', 'DExcept')
	(False, False, True, True, False)
	('java.sql.PreparedStatement.execute()', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.sql.Statement.close()', 'DStop')
	37



-----------------------------------------------------------------------------
Constraints: ['java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()']   # least occurring api
Nodes:['DSubTree', 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])']
Edges:(False, False, False)
Targets:['java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['__UDT__']
Total accepted transformations:13
Total rejected transformations:280
Total valid transformations:293
Total invalid transformations:33
Total attempted add transforms:111
Total accepted add transforms:5
Total attempted delete transforms:68
Total accepted delete transforms:3
Total attempted swap transforms:33
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree',)
	(False,)
	('java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()',)
	8

	('DSubTree', 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()')
	(False, False)
	('java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)')
	4

	('DSubTree', 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)')
	(False, False, False)
	('java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)', 'java.util.Collections.singleton(Tau_T)')
	16

	('DSubTree', 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)')
	(False, False, False)
	('java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)', 'java.lang.RuntimeException.RuntimeException(java.lang.String)')
	248

	('DSubTree', 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])')
	(False, False, False)
	('java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)')
	20

	('DSubTree', 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)')
	(False, False, False, False)
	('java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])', 'java.util.ArrayList<javax.xml.transform.Source>.add(javax.xml.transform.Source)', 'DStop')
	34

APIs that do NOT occur with 'java.util.ArrayList<javax.xml.transform.Source>.ArrayList<Source>()' in dataset:
['java.util.Collections.singleton(Tau_T)', 'java.lang.RuntimeException.RuntimeException(java.lang.String)']


-----------------------------------------------------------------------------
Constraints: ['java.lang.String.length()', 'java.lang.String.substring(int,int)']  # high-high cooccurring pair
Nodes:['DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.getMessage()']
Edges:(False, False, False, True, True)
Targets:['java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.lang.Class.forName(java.lang.String)']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['String']
Total accepted transformations:41
Total rejected transformations:151
Total valid transformations:192
Total invalid transformations:121
Total attempted add transforms:101
Total accepted add transforms:0
Total attempted delete transforms:71
Total accepted delete transforms:5
Total attempted swap transforms:34
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.String.length()')
	(False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)')
	21

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)')
	(False, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DStop')
	18

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)')
	(False, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', '$NOT$java.lang.String.isEmpty()')
	2

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'java.sql.Timestamp.Timestamp(long)')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'java.sql.Timestamp.Timestamp(long)', 'DStop')
	4

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)')
	(False, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'java.sql.Timestamp.Timestamp(long)')
	4

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.Thread.sleep(long)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.Thread.sleep(long)', 'DStop', 'DStop')
	4

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.regex.Pattern.matcher(java.lang.CharSequence)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.regex.Pattern.matcher(java.lang.CharSequence)', 'DStop', 'DStop')
	26

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])', 'DStop', 'DStop')
	58

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'DExcept')
	(False, False, False, True, True, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])', 'DStop')
	4

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.reflect.Field.getType()', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.reflect.Field.getType()', 'DStop', 'DStop')
	16

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.Properties.Properties()', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.Properties.Properties()', 'DStop', 'DStop')
	88

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'DExcept')
	(False, False, False, True, True, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.Properties.Properties()', 'DStop')
	32

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.io.File.toURI()', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.io.File.toURI()', 'DStop', 'DStop')
	5

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.lang.Class.forName(java.lang.String)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.String.length()', 'java.lang.String.substring(int,int)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.lang.Class.forName(java.lang.String)', 'DStop', 'DStop')
	48


All APIs appear in programs with both constraints. However, the DExcept structures with these APIs do not appear in those. These are common structures in other programs that don't contain the constraint APIs.


-----------------------------------------------------------------------------
Constraints: ['java.lang.String.length()', 'java.io.BufferedWriter.newLine()']  # high-mid cooccurring pair
Nodes:['DSubTree', 'java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()']
Edges:(False, False, False, False, False)
Targets:['java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:18
Total rejected transformations:241
Total valid transformations:259
Total invalid transformations:70
Total attempted add transforms:93
Total accepted add transforms:4
Total attempted delete transforms:77
Total accepted delete transforms:3
Total attempted swap transforms:40
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.String.length()')
	(False, False)
	('java.lang.String.length()', 'java.io.BufferedWriter.newLine()')
	1

	('DSubTree', 'java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()', 'DStop')
	10

	('DSubTree', 'java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()', 'java.lang.Throwable.printStackTrace()')
	30

	('DSubTree', 'java.lang.String.length()', 'java.io.BufferedWriter.newLine()')
	(False, False, False)
	('java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.lang.Throwable.printStackTrace()')
	21

	('DSubTree', 'java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.lang.Throwable.printStackTrace()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.io.BufferedWriter.newLine()', 'java.lang.Throwable.printStackTrace()', 'DStop')
	170

	('DSubTree', 'java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()', 'DStop')
	6

	('DSubTree', 'java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()')
	(False, False, False, False, False, False)
	('java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()', 'DStop')
	3

	('DSubTree', 'java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()', 'java.io.BufferedWriter.newLine()', 'java.io.BufferedWriter.close()')
	89


APIs that do NOT appear in programs with BOTH constraints: ['java.io.BufferedWriter.close()', 'java.lang.Throwable.printStackTrace()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()']
APIs that appear in programs with just 'java.lang.String.length()' : ['java.io.BufferedWriter.close()', 'java.lang.Throwable.printStackTrace()', 'java.util.TreeMap<Tau_K,Tau_V>.TreeMap()']
APIs that appear in programs with just 'java.io.BufferedWriter.newLine()': ['java.io.BufferedWriter.close()', 'java.lang.Throwable.printStackTrace()']


VAE beam search on encoding of [DSubTree, 'java.lang.String.length()', 'java.io.BufferedWriter.newLine()']:
 ========== AST ==========
[('DSubTree', 0, False), ('java.lang.String.length()', 0, False), ('DExcept', 1, False), ('java.lang.Throwable.printStackTrace()', 2, True), ('java.lang.Thread.sleep(long)', 3, True), ('DStop', 4, False), ('DStop', 3, False), ('DStop', 2, False)]
[('DSubTree', 0, False), ('java.lang.String.length()', 0, False), ('java.lang.String.substring(int)', 1, False), ('java.lang.Thread.sleep(long)', 2, False), ('DStop', 3, False)]
[('DSubTree', 0, False), ('java.lang.String.length()', 0, False), ('java.lang.Throwable.printStackTrace()', 1, False), ('java.lang.Throwable.getMessage()', 2, False), ('DStop', 3, False)]
[('DSubTree', 0, False), ('java.lang.Throwable.printStackTrace()', 0, False), ('DExcept', 1, False), ('java.lang.Throwable.printStackTrace()', 2, True), ('java.lang.Thread.sleep(long)', 3, True), ('DStop', 4, False), ('DStop', 3, False), ('DStop', 2, False)]
[('DSubTree', 0, False), ('java.lang.String.length()', 0, False), ('DStop', 1, False)]
 ========== Fp ==========
[('DSubTree', 0, False), ('String', 0, False), ('__UDT__', 1, False), ('long', 2, False), ('String', 3, False), ('String', 4, False), ('String', 5, False), ('String', 6, False), ('String', 7, False), ('String', 8, False), ('String', 9, False), ('String', 10, False), ('String', 11, False), ('String', 12, False), ('String', 13, False), ('String', 14, False), ('String', 15, False), ('String', 16, False), ('String', 17, False), ('String', 18, False), ('String', 19, False)]
[('DSubTree', 0, False), ('String', 0, False), ('__UDT__', 1, False), ('long', 2, False), ('String', 3, False), ('String', 4, False), ('String', 5, False), ('String', 6, False), ('String', 7, False), ('String', 8, False), ('String', 9, False), ('String', 10, False), ('String', 11, False), ('String', 12, False), ('String', 13, False), ('String', 14, False), ('String', 15, False), ('long', 16, False), ('String', 17, False), ('String', 18, False), ('long', 19, False)]
[('DSubTree', 0, False), ('String', 0, False), ('__UDT__', 1, False), ('long', 2, False), ('String', 3, False), ('String', 4, False), ('String', 5, False), ('String', 6, False), ('String', 7, False), ('String', 8, False), ('String', 9, False), ('String', 10, False), ('String', 11, False), ('long', 12, False), ('String', 13, False), ('String', 14, False), ('long', 15, False), ('long', 16, False), ('String', 17, False), ('String', 18, False), ('String', 19, False)]
[('DSubTree', 0, False), ('String', 0, False), ('__UDT__', 1, False), ('long', 2, False), ('String', 3, False), ('String', 4, False), ('String', 5, False), ('String', 6, False), ('String', 7, False), ('String', 8, False), ('String', 9, False), ('String', 10, False), ('String', 11, False), ('String', 12, False), ('String', 13, False), ('long', 14, False), ('String', 15, False), ('String', 16, False), ('long', 17, False), ('long', 18, False), ('String', 19, False)]
[('DSubTree', 0, False), ('String', 0, False), ('__UDT__', 1, False), ('long', 2, False), ('String', 3, False), ('String', 4, False), ('String', 5, False), ('String', 6, False), ('String', 7, False), ('String', 8, False), ('String', 9, False), ('String', 10, False), ('String', 11, False), ('String', 12, False), ('String', 13, False), ('String', 14, False), ('String', 15, False), ('String', 16, False), ('String', 17, False), ('long', 18, False), ('String', 19, False)]
 ========== Return Type ==========
['void', 'String', '__UDT__', 'PrintWriter', 'RuntimeException']


-----------------------------------------------------------------------------
Constraints: ['java.lang.String.length()', 'javax.swing.JPanel.JPanel()']  # high-low cooccurring pair
Nodes:['DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()']
Edges:(False, False, False, False, False)
Targets:['java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:45
Total rejected transformations:237
Total valid transformations:282
Total invalid transformations:47
Total attempted add transforms:92
Total accepted add transforms:5
Total attempted delete transforms:66
Total accepted delete transforms:9
Total attempted swap transforms:39
Total accepted swap transforms:5
Posterior Distribution:
	('DSubTree', 'java.lang.String.length()')
	(False, False)
	('java.lang.String.length()', 'javax.swing.JPanel.JPanel()')
	8

	('DSubTree', 'java.lang.String.length()', 'javax.swing.JPanel.JPanel()')
	(False, False, False)
	('java.lang.String.length()', 'javax.swing.JPanel.JPanel()', 'DStop')
	8

	('DSubTree', 'java.lang.String.length()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.String(char[])')
	(False, False, False, False)
	('java.lang.String.length()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.String(char[])', 'DStop')
	1

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.String(char[])', 'javax.swing.JPanel.JPanel()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.String.String(char[])', 'javax.swing.JPanel.JPanel()', 'DStop')
	2

	('DSubTree', 'java.lang.String.length()', 'java.lang.String.String(char[])', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.String.String(char[])', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'DStop')
	2

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.String(char[])')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.String(char[])', 'DStop')
	49

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.valueOf(char)', 'java.lang.String.String(char[])')
	(False, False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.valueOf(char)', 'java.lang.String.String(char[])', 'DStop')
	12

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.valueOf(char)')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.valueOf(char)', 'java.lang.String.String(char[])')
	5

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.String.String(char[])')
	2

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.String.String(char[])')
	(False, False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.String.String(char[])', 'DStop')
	52

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.String.String(char[])')
	9

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()')
	14

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()')
	8

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'javax.swing.JComponent.setOpaque(boolean)')
	3

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()')
	(False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()')
	43

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'DStop')
	9

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'DStop')
	15

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'DStop')
	23

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'DStop')
	55

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'DStop')
	4

	('DSubTree', 'java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()')
	(False, False, False, False, False, False)
	('java.lang.String.length()', 'java.lang.Throwable.toString()', 'javax.swing.JPanel.JPanel()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.toString()')
	6



-----------------------------------------------------------------------------
Constraints: ['java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)']  # mid-mid cooccurring pair
Nodes:['DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.io.StringWriter.StringWriter()']
Edges:(False, False, False, True, True)
Targets:['java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.io.StringWriter.StringWriter()', 'java.lang.Thread.currentThread()']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['String']
Total accepted transformations:23
Total rejected transformations:217
Total valid transformations:240
Total invalid transformations:89
Total attempted add transforms:85
Total accepted add transforms:3
Total attempted delete transforms:68
Total accepted delete transforms:2
Total attempted swap transforms:46
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.StringBuilder.append(long)')
	(False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)')
	12

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.util.Calendar.setTime(java.util.Date)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.util.Calendar.setTime(java.util.Date)', 'DStop', 'DStop')
	54

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.text.DateFormat.parse(java.lang.String)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.text.DateFormat.parse(java.lang.String)', 'DStop', 'DStop')
	5

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.io.InputStream.close()', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.io.InputStream.close()', 'DStop', 'DStop')
	10

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.lang.String.getBytes(java.lang.String)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.lang.String.getBytes(java.lang.String)', 'DStop', 'DStop')
	15

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.math.BigInteger.valueOf(long)', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Throwable.getMessage()', 'java.math.BigInteger.valueOf(long)', 'DStop', 'DStop')
	22

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'DStop', 'DStop')
	28

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'java.lang.Throwable.printStackTrace()', 'DExcept')
	(False, False, False, True, True, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'java.lang.Throwable.printStackTrace()', 'DStop', 'DStop')
	18

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'java.lang.Thread.sleep(long)', 'DExcept')
	(False, False, False, True, True, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'java.lang.Thread.sleep(long)', 'DStop', 'DStop')
	13

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'DExcept')
	(False, False, False, True, True, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.lang.Thread.currentThread()', 'java.util.Date.getTime()', 'DStop')
	7

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.io.StringWriter.StringWriter()', 'java.lang.Thread.currentThread()', 'DExcept')
	(False, False, False, True, True, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.String.valueOf(long)', 'DExcept', 'java.io.StringWriter.StringWriter()', 'java.lang.Thread.currentThread()', 'DStop', 'DStop')
	146



-----------------------------------------------------------------------------
Constraints: ['java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)']   # mid-low cooccurring pair
Nodes:['DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)']
Edges:(False, False, False, False)
Targets:['java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()']
Formal Parameters:['DSubTree', 'long', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:30
Total rejected transformations:222
Total valid transformations:252
Total invalid transformations:74
Total attempted add transforms:87
Total accepted add transforms:4
Total attempted delete transforms:70
Total accepted delete transforms:7
Total attempted swap transforms:25
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()', 'DStop')
	19

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()', 'java.sql.Timestamp.Timestamp(long)')
	105

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)')
	(False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()')
	1

	('DSubTree', 'java.lang.StringBuilder.append(long)')
	(False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)')
	7

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)')
	(False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()')
	5

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()', 'DStop')
	24

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()', 'java.lang.StringBuilder.toString()')
	(False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()', 'java.lang.StringBuilder.toString()', 'DStop')
	2

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.Thread.sleep(long)', 'java.lang.System.currentTimeMillis()', 'java.lang.StringBuilder.toString()')
	2

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()')
	82

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()')
	(False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)', 'java.lang.StringBuilder.toString()', 'DStop')
	12

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)')
	(False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)')
	7

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.Thread.sleep(long)', 'DStop')
	64



-----------------------------------------------------------------------------
Constraints: ['java.util.Map<java.lang.String,byte[]>.hashCode()']  # low-low cooccurring pair
Nodes:['DSubTree', 'java.util.Map<java.lang.String,byte[]>.hashCode()']
Edges:(False, False)
Targets:['java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.io.File.getCanonicalPath()']
Formal Parameters:['DSubTree', '__UDT__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['String']
Total accepted transformations:1
Total rejected transformations:253
Total valid transformations:254
Total invalid transformations:76
Total attempted add transforms:98
Total accepted add transforms:1
Total attempted delete transforms:58
Total accepted delete transforms:0
Total attempted swap transforms:29
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.util.Map<java.lang.String,byte[]>.hashCode()')
	(False, False)
	('java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.io.File.getCanonicalPath()')
	330



-----------------------------------------------------------------------------
Constraints: ['java.lang.String.length()', 'java.lang.Thread.join()']  # high-high disjoint pair
Nodes:['DSubTree', 'java.lang.String.length()', 'java.lang.Thread.start()']
Edges:(False, False, False)
Targets:['java.lang.String.length()', 'java.lang.Thread.start()', 'java.lang.Thread.join()']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:80
Total rejected transformations:148
Total valid transformations:228
Total invalid transformations:78
Total attempted add transforms:106
Total accepted add transforms:6
Total attempted delete transforms:57
Total accepted delete transforms:12
Total attempted swap transforms:37
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.String.length()')
	(False, False)
	('java.lang.String.length()', 'java.lang.Thread.join()')
	2

	('DSubTree', 'java.lang.String.length()', 'java.lang.Thread.join()')
	(False, False, False)
	('java.lang.String.length()', 'java.lang.Thread.join()', 'DStop')
	4

	('DSubTree', 'java.lang.String.length()', 'java.io.BufferedReader.BufferedReader(java.io.Reader)', 'java.lang.Thread.join()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.io.BufferedReader.BufferedReader(java.io.Reader)', 'java.lang.Thread.join()', 'DStop')
	16

	('DSubTree', 'java.lang.String.length()', 'java.io.BufferedReader.BufferedReader(java.io.Reader)')
	(False, False, False)
	('java.lang.String.length()', 'java.io.BufferedReader.BufferedReader(java.io.Reader)', 'java.lang.Thread.join()')
	2

	('DSubTree', 'java.lang.String.length()', 'java.lang.Thread.start()', 'java.lang.Thread.join()')
	(False, False, False, False)
	('java.lang.String.length()', 'java.lang.Thread.start()', 'java.lang.Thread.join()', 'DStop')
	219

	('DSubTree', 'java.lang.String.length()', 'java.lang.Thread.start()')
	(False, False, False)
	('java.lang.String.length()', 'java.lang.Thread.start()', 'java.lang.Thread.join()')
	87




-----------------------------------------------------------------------------
Constraints: ['java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)']   # high-mid disjoint pair
Nodes:['DSubTree', 'java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)']
Edges:(False, False, False, False)
Targets:['java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)', 'java.io.RandomAccessFile.writeInt(int)']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:11
Total rejected transformations:241
Total valid transformations:252
Total invalid transformations:78
Total attempted add transforms:88
Total accepted add transforms:3
Total attempted delete transforms:67
Total accepted delete transforms:0
Total attempted swap transforms:33
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.String.length()')
	(False, False)
	('java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)')
	21

	('DSubTree', 'java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)')
	(False, False, False)
	('java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)')
	3

	('DSubTree', 'java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)')
	(False, False, False, False)
	('java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)', 'DStop')
	63

	('DSubTree', 'java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)', 'java.io.RandomAccessFile.writeBytes(java.lang.String)')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)', 'java.io.RandomAccessFile.writeBytes(java.lang.String)', 'DStop')
	65

	('DSubTree', 'java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)', 'java.io.RandomAccessFile.writeInt(int)')
	(False, False, False, False, False)
	('java.lang.String.length()', 'java.io.RandomAccessFile.seek(long)', 'java.lang.Long.toString(long)', 'java.io.RandomAccessFile.writeInt(int)', 'DStop')
	178



-----------------------------------------------------------------------------
Constraints: ['java.lang.String.length()', '$NOT$javax.swing.JTable.isRowSelected(int)']  # high-low disjoint pair
Nodes:['DSubTree', 'java.lang.String.length()', 'java.io.File.getName()']
Edges:(False, False, False)
Targets:['java.lang.String.length()', 'java.io.File.getName()', '$NOT$javax.swing.JTable.isRowSelected(int)']
Formal Parameters:['DSubTree', 'String', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['void']
Total accepted transformations:16
Total rejected transformations:171
Total valid transformations:187
Total invalid transformations:122
Total attempted add transforms:99
Total accepted add transforms:2
Total attempted delete transforms:60
Total accepted delete transforms:3
Total attempted swap transforms:39
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.String.length()')
	(False, False)
	('java.lang.String.length()', '$NOT$javax.swing.JTable.isRowSelected(int)')
	1

	('DSubTree', 'java.lang.String.length()', 'java.io.File.getName()')
	(False, False, False)
	('java.lang.String.length()', 'java.io.File.getName()', '$NOT$javax.swing.JTable.isRowSelected(int)')
	66

	('DSubTree', 'java.lang.String.length()', 'java.io.File.getName()', '$NOT$javax.swing.JTable.isRowSelected(int)')
	(False, False, False, False)
	('java.lang.String.length()', 'java.io.File.getName()', '$NOT$javax.swing.JTable.isRowSelected(int)', 'DStop')
	263



-----------------------------------------------------------------------------
Constraints: ['java.lang.StringBuilder.append(long)', 'java.util.Calendar.set(int,int)']  # mid-mid disjoint pair
Nodes:['DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.util.Calendar.add(int,int)', 'java.util.Locale.getDefault()', 'java.util.Calendar.getTime()']
Edges:(False, False, False, False, False, False, False, False, False, False)
Targets:['java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.util.Calendar.add(int,int)', 'java.util.Locale.getDefault()', 'java.util.Calendar.getTime()', 'java.text.DateFormat.format(java.util.Date)']
Formal Parameters:['DSubTree', 'int', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['String']
Total accepted transformations:14
Total rejected transformations:246
Total valid transformations:260
Total invalid transformations:55
Total attempted add transforms:93
Total accepted add transforms:5
Total attempted delete transforms:70
Total accepted delete transforms:1
Total attempted swap transforms:34
Total accepted swap transforms:2
Posterior Distribution:
	('DSubTree', 'java.lang.StringBuilder.append(long)')
	(False, False)
	('java.lang.StringBuilder.append(long)', 'java.util.Calendar.set(int,int)')
	3

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.util.Calendar.set(int,int)')
	(False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	2

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.set(int,int)')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	176

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)')
	(False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	33

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	(False, False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.lang.StringBuilder.toString()')
	1

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	(False, False, False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.lang.StringBuilder.toString()')
	73

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)')
	(False, False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	1

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()')
	(False, False, False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.text.DateFormat.format(java.util.Date)')
	14

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.util.Calendar.add(int,int)', 'java.util.Locale.getDefault()', 'java.util.Calendar.getTime()')
	(False, False, False, False, False, False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.util.Calendar.getTime()', 'java.util.Calendar.getTime()', 'java.util.Calendar.set(int,int)', 'java.util.Calendar.getTime()', 'java.util.Calendar.add(int,int)', 'java.util.Locale.getDefault()', 'java.util.Calendar.getTime()', 'java.text.DateFormat.format(java.util.Date)')
	27



-----------------------------------------------------------------------------
Constraints: ['java.lang.StringBuilder.append(long)', 'java.util.Map<java.lang.String,byte[]>.hashCode()']  # mid-low disjoint pair
Nodes:['DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.util.Map<java.lang.String,byte[]>.hashCode()']
Edges:(False, False, False, False)
Targets:['java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.security.AccessController.doPrivileged(java.security.PrivilegedAction)']
Formal Parameters:['DSubTree', '__UDT__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['String']
Total accepted transformations:5
Total rejected transformations:243
Total valid transformations:248
Total invalid transformations:80
Total attempted add transforms:105
Total accepted add transforms:3
Total attempted delete transforms:57
Total accepted delete transforms:0
Total attempted swap transforms:23
Total accepted swap transforms:0
Posterior Distribution:
	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.util.Map<java.lang.String,byte[]>.hashCode()')
	(False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.security.AccessController.doPrivileged(java.security.PrivilegedAction)')
	1

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.util.Map<java.lang.String,byte[]>.hashCode()')
	(False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.security.AccessController.doPrivileged(java.security.PrivilegedAction)')
	39

	('DSubTree', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.security.AccessController.doPrivileged(java.security.PrivilegedAction)')
	(False, False, False, False, False)
	('java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.security.AccessController.doPrivileged(java.security.PrivilegedAction)', 'DStop')
	290



-----------------------------------------------------------------------------
Constraints: ['java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])']  # low-low disjoint pair
Nodes:['DSubTree', 'java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()']
Edges:(False, False, False)
Targets:['java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])']
Formal Parameters:['DSubTree', '__UDT__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__', '__delim__']
Return Types:['String']
Total accepted transformations:21
Total rejected transformations:244
Total valid transformations:265
Total invalid transformations:65
Total attempted add transforms:90
Total accepted add transforms:2
Total attempted delete transforms:56
Total accepted delete transforms:5
Total attempted swap transforms:37
Total accepted swap transforms:2
Posterior Distribution:
	('DSubTree', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])')
	(False, False, False)
	('java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.Throwable.printStackTrace()')
	5

	('DSubTree', 'java.util.Map<java.lang.String,byte[]>.hashCode()')
	(False, False)
	('java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])')
	12

	('DSubTree', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])')
	(False, False, False)
	('java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])')
	120

	('DSubTree', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])')
	(False, False, False, False)
	('java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])', 'DStop')
	43

	('DSubTree', 'java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])')
	(False, False, False, False)
	('java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'DStop')
	40

	('DSubTree', 'java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])')
	(False, False, False, False, False)
	('java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])', 'DStop')
	1

	('DSubTree', 'java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])')
	(False, False, False, False)
	('java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])')
	10

	('DSubTree', 'java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()')
	(False, False, False)
	('java.lang.String.String(byte[])', 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])')
	99


VAE beam search on encoding of [DSubtree, 'java.util.Map<java.lang.String,byte[]>.hashCode()', 'java.lang.String.String(byte[])']:
========== AST ==========
[('DSubTree', 0, False), ('java.io.File.getAbsolutePath()', 0, False), ('java.lang.Thread.toString()', 1, False), ('DStop', 2, False)]
[('DSubTree', 0, False), ('java.io.FileOutputStream.FileOutputStream(java.io.File)', 0, False), ('java.lang.String.toCharArray()', 1, False), ('DStop', 2, False)]
[('DSubTree', 0, False), ('java.io.File.getAbsolutePath()', 0, False), ('java.lang.Thread.toString()', 1, False), ('DExcept', 2, False), ('java.lang.Throwable.printStackTrace()', 3, True), ('DStop', 4, True), ('DStop', 4, False), ('DStop', 3, False)]
[('DSubTree', 0, False), ('java.io.File.getAbsolutePath()', 0, False), ('java.lang.Thread.toString()', 1, False), ('DExcept', 2, False), ('java.lang.Throwable.printStackTrace()', 3, True), ('java.lang.Throwable.getMessage()', 4, True), ('DStop', 5, False), ('DStop', 4, False), ('DStop', 3, False)]
[('DSubTree', 0, False), ('java.io.File.exists()', 0, False), ('DExcept', 1, False), ('java.lang.Throwable.printStackTrace()', 2, True), ('java.io.FileOutputStream.FileOutputStream(java.io.File)', 3, True), ('DStop', 4, False), ('DStop', 3, False), ('DStop', 2, False)]
 ========== Fp ==========
[('DSubTree', 0, False), ('__UDT__', 0, False), ('String', 1, False), ('ExtendedBlock', 2, False), ('__UDT__', 3, False), ('long', 4, False), ('long', 5, False), ('long', 6, False), ('String', 7, False), ('__UDT__', 8, False), ('long', 9, False), ('long', 10, False), ('__UDT__', 11, False), ('String', 12, False), ('__UDT__', 13, False), ('__UDT__', 14, False), ('__UDT__', 15, False), ('__UDT__', 16, False), ('__UDT__', 17, False), ('__UDT__', 18, False), ('__UDT__', 19, False)]
[('DSubTree', 0, False), ('__UDT__', 0, False), ('String', 1, False), ('ExtendedBlock', 2, False), ('__UDT__', 3, False), ('long', 4, False), ('long', 5, False), ('long', 6, False), ('String', 7, False), ('__UDT__', 8, False), ('long', 9, False), ('long', 10, False), ('__UDT__', 11, False), ('__UDT__', 12, False), ('__UDT__', 13, False), ('String', 14, False), ('__UDT__', 15, False), ('__UDT__', 16, False), ('__UDT__', 17, False), ('__UDT__', 18, False), ('__UDT__', 19, False)]
[('DSubTree', 0, False), ('__UDT__', 0, False), ('String', 1, False), ('ExtendedBlock', 2, False), ('__UDT__', 3, False), ('long', 4, False), ('long', 5, False), ('long', 6, False), ('__UDT__', 7, False), ('__UDT__', 8, False), ('__UDT__', 9, False), ('String', 10, False), ('String', 11, False), ('__UDT__', 12, False), ('__UDT__', 13, False), ('__UDT__', 14, False), ('__UDT__', 15, False), ('__UDT__', 16, False), ('__UDT__', 17, False), ('__UDT__', 18, False), ('__UDT__', 19, False)]
[('DSubTree', 0, False), ('__UDT__', 0, False), ('String', 1, False), ('ExtendedBlock', 2, False), ('__UDT__', 3, False), ('long', 4, False), ('long', 5, False), ('long', 6, False), ('__UDT__', 7, False), ('__UDT__', 8, False), ('__UDT__', 9, False), ('String', 10, False), ('__UDT__', 11, False), ('__UDT__', 12, False), ('__UDT__', 13, False), ('__UDT__', 14, False), ('__UDT__', 15, False), ('__UDT__', 16, False), ('__UDT__', 17, False), ('__UDT__', 18, False), ('__UDT__', 19, False)]
[('DSubTree', 0, False), ('__UDT__', 0, False), ('String', 1, False), ('ExtendedBlock', 2, False), ('__UDT__', 3, False), ('long', 4, False), ('long', 5, False), ('long', 6, False), ('__UDT__', 7, False), ('__UDT__', 8, False), ('__UDT__', 9, False), ('String', 10, False), ('__UDT__', 11, False), ('__UDT__', 12, False), ('__UDT__', 13, False), ('__UDT__', 14, False), ('__UDT__', 15, False), ('__UDT__', 16, False), ('__UDT__', 17, False), ('__UDT__', 18, False), ('String', 19, False)]
 ========== Return Type ==========
['String', 'void', '__UDT__', 'Project', 'boolean[]']