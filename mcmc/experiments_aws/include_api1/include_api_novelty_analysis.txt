data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/novel_1k_data_small_config
num iterations: 50.0
category: include_api
label: novelty
num test programs: 1000


counter: 0
num skipped: 0
{'include': ['java.lang.reflect.Method.getParameterTypes()', 'java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.lang.reflect.Method.getParameterTypes()'), (False, False), ('java.lang.reflect.Method.getParameterTypes()', 'java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])')): [3, -8.897156953811646], (('DSubTree', 'java.lang.reflect.Method.getParameterTypes()', 'java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])'), (False, False, False), ('java.lang.reflect.Method.getParameterTypes()', 'java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])', 'DStop')): [47, -5.443438532762229]}

counter: 5
num skipped: 0
{'include': ['java.io.FilterInputStream.read(byte[])', 'java.io.ByteArrayOutputStream.write(byte[],int,int)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.ByteArrayOutputStream.write(byte[],int,int)'), (False, False), ('java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.io.FilterInputStream.read(byte[])')): [1, -18.675105094909668], (('DSubTree', 'java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.io.FilterInputStream.read(byte[])'), (False, False, False), ('java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.io.FilterInputStream.read(byte[])', 'java.lang.String.String(byte[])')): [4, -20.333297729492188], (('DSubTree', 'java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.FilterInputStream.read(byte[])'), (False, False, False, False, False), ('java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.FilterInputStream.read(byte[])', 'java.lang.String.String(byte[])')): [2, -26.573495745658875], (('DSubTree', 'java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.Long.toString()', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.FilterInputStream.read(byte[])'), (False, False, False, False, False, False), ('java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.Long.toString()', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.FilterInputStream.read(byte[])', 'java.lang.String.String(byte[])')): [25, -29.94632625579834], (('DSubTree', 'java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.Long.toString()', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.OutputStream.write(byte[],int,int)', 'java.io.FilterInputStream.read(byte[])'), (False, False, False, False, False, False, False), ('java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.Long.toString()', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.OutputStream.write(byte[],int,int)', 'java.io.FilterInputStream.read(byte[])', 'java.lang.String.String(byte[])')): [5, -30.633304357528687], (('DSubTree', 'java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.Long.toString()', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.OutputStream.write(byte[],int,int)'), (False, False, False, False, False, False), ('java.io.ByteArrayOutputStream.write(byte[],int,int)', 'java.lang.Long.toString()', 'java.lang.String.getBytes(java.lang.String)', 'java.io.FilterInputStream.read(byte[])', 'java.io.OutputStream.write(byte[],int,int)', 'java.io.FilterInputStream.read(byte[])')): [13, -25.8216532766819]}

counter: 10
num skipped: 0
{'include': ['java.io.RandomAccessFile.seek(long)', 'java.io.RandomAccessFile.writeInt(int)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.RandomAccessFile.seek(long)'), (False, False), ('java.io.RandomAccessFile.seek(long)', 'java.io.RandomAccessFile.writeInt(int)')): [4, -20.393445014953613], (('DSubTree', 'java.io.RandomAccessFile.seek(long)', 'java.io.RandomAccessFile.writeInt(int)'), (False, False, False), ('java.io.RandomAccessFile.seek(long)', 'java.io.RandomAccessFile.writeInt(int)', 'DStop')): [5, -20.868054553866386], (('DSubTree', 'java.io.RandomAccessFile.seek(long)', 'java.io.File.renameTo(java.io.File)', 'java.io.RandomAccessFile.writeInt(int)'), (False, False, False, False), ('java.io.RandomAccessFile.seek(long)', 'java.io.File.renameTo(java.io.File)', 'java.io.RandomAccessFile.writeInt(int)', 'DStop')): [41, -19.49896181281656]}

counter: 15
num skipped: 0
{'include': ['javax.xml.parsers.DocumentBuilder.newDocument()', 'java.io.File.File(java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'javax.xml.parsers.DocumentBuilder.newDocument()'), (False, False), ('javax.xml.parsers.DocumentBuilder.newDocument()', 'java.io.File.File(java.lang.String)')): [11, -9.838929176330566], (('DSubTree', 'javax.xml.parsers.DocumentBuilder.newDocument()', 'java.io.File.File(java.lang.String)', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.util.HashMap<java.lang.String,java.lang.Object>.put(java.lang.String,java.lang.Object)'), (False, False, False, False, False), ('javax.xml.parsers.DocumentBuilder.newDocument()', 'java.io.File.File(java.lang.String)', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.util.HashMap<java.lang.String,java.lang.Object>.put(java.lang.String,java.lang.Object)', 'java.io.File.File(java.lang.String)')): [1, -16.752085089683533], (('DSubTree', 'javax.xml.parsers.DocumentBuilder.newDocument()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.util.HashMap<java.lang.String,java.lang.Object>.put(java.lang.String,java.lang.Object)'), (False, False, False, False), ('javax.xml.parsers.DocumentBuilder.newDocument()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.util.HashMap<java.lang.String,java.lang.Object>.put(java.lang.String,java.lang.Object)', 'java.io.File.File(java.lang.String)')): [2, -14.336665987968445], (('DSubTree', 'javax.xml.parsers.DocumentBuilder.newDocument()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()'), (False, False, False), ('javax.xml.parsers.DocumentBuilder.newDocument()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.io.File.File(java.lang.String)')): [27, -11.999161005020142], (('DSubTree', 'javax.xml.parsers.DocumentBuilder.newDocument()', 'javax.xml.bind.JAXBContext.newInstance(java.lang.String)', 'javax.xml.bind.JAXBContext.createMarshaller()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()'), (False, False, False, False, False), ('javax.xml.parsers.DocumentBuilder.newDocument()', 'javax.xml.bind.JAXBContext.newInstance(java.lang.String)', 'javax.xml.bind.JAXBContext.createMarshaller()', 'java.util.HashMap<java.lang.String,java.lang.Object>.HashMap<String,Object>()', 'java.io.File.File(java.lang.String)')): [9, -17.213339805603027]}

counter: 20
num skipped: 0
{'include': ['java.util.HashSet.HashSet()', 'java.util.Collection.addAll(java.util.Collection)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.util.HashSet.HashSet()'), (False, False), ('java.util.HashSet.HashSet()', 'java.util.Collection.addAll(java.util.Collection)')): [2, -2.7765161991119385], (('DSubTree', 'java.util.HashSet.HashSet()', 'java.util.Collection.addAll(java.util.Collection)'), (False, False, False), ('java.util.HashSet.HashSet()', 'java.util.Collection.addAll(java.util.Collection)', 'DStop')): [48, -2.088937812601216]}

counter: 25
num skipped: 0
{'include': ['java.lang.Class<>.isPrimitive()', 'java.lang.Class<>.isAssignableFrom(java.lang.Class)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.lang.Class<>.isPrimitive()'), (False, False), ('java.lang.Class<>.isPrimitive()', 'java.lang.Class<>.isAssignableFrom(java.lang.Class)')): [37, -3.7467591762542725], (('DSubTree', 'java.lang.Class<>.isPrimitive()', 'java.lang.Class<>.isAssignableFrom(java.lang.Class)'), (False, False, False), ('java.lang.Class<>.isPrimitive()', 'java.lang.Class<>.isAssignableFrom(java.lang.Class)', 'java.util.Collections.unmodifiableList(java.util.List)')): [5, -8.576331473886967], (('DSubTree', 'java.lang.Class<>.isPrimitive()', 'java.lang.Class<>.isAssignableFrom(java.lang.Class)', 'java.util.Collections.unmodifiableList(java.util.List)'), (False, False, False, False), ('java.lang.Class<>.isPrimitive()', 'java.lang.Class<>.isAssignableFrom(java.lang.Class)', 'java.util.Collections.unmodifiableList(java.util.List)', 'DStop')): [8, -7.496141544077545]}

counter: 30
num skipped: 0
{'include': ['javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'javax.swing.JComponent.getHeight()'), (False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)')): [2, -5.426220178604126], (('DSubTree', 'javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)'), (False, False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'DStop')): [8, -8.701923578977585], (('DSubTree', 'javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.awt.Graphics.dispose()'), (False, False, False, False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.awt.Graphics.dispose()', 'DStop')): [3, -6.972655350342393], (('DSubTree', 'javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.lang.Thread.currentThread()'), (False, False, False, False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.lang.Thread.currentThread()', 'DStop')): [17, -5.787496283650398], (('DSubTree', 'javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()'), (False, False, False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.lang.Thread.currentThread()')): [10, -6.067562580108643], (('DSubTree', 'javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()'), (False, False, False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.lang.StringBuilder.append(java.lang.String)')): [1, -11.676169037818909], (('DSubTree', 'javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.lang.Thread.currentThread()'), (False, False, False, False, False), ('javax.swing.JComponent.getHeight()', 'java.awt.Graphics.drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)', 'java.lang.Thread.currentThread()', 'java.lang.Thread.currentThread()', 'java.lang.StringBuilder.append(java.lang.String)')): [9, -12.261789321899414]}

counter: 35
num skipped: 0
{'include': ['$NOT$java.awt.event.InputEvent.isConsumed()', 'java.awt.event.InputEvent.consume()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', '$NOT$java.awt.event.InputEvent.isConsumed()'), (False, False), ('$NOT$java.awt.event.InputEvent.isConsumed()', 'java.awt.event.InputEvent.consume()')): [31, -15.54656970500946], (('DSubTree', '$NOT$java.awt.event.InputEvent.isConsumed()', 'java.awt.event.InputEvent.consume()'), (False, False, False), ('$NOT$java.awt.event.InputEvent.isConsumed()', 'java.awt.event.InputEvent.consume()', 'DStop')): [19, -16.659851366246585]}

counter: 40
num skipped: 0
{'include': ['java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.toString()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.lang.String.String(java.lang.String)'), (False, False), ('java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.toString()')): [15, -6.7334155440330505], (('DSubTree', 'java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.StringBuilder(java.lang.String)', 'java.lang.StringBuilder.append(java.lang.Object)'), (False, False, False, False), ('java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.StringBuilder(java.lang.String)', 'java.lang.StringBuilder.append(java.lang.Object)', 'java.lang.StringBuilder.toString()')): [4, -14.46578262746334], (('DSubTree', 'java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.StringBuilder(java.lang.String)'), (False, False, False), ('java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.StringBuilder(java.lang.String)', 'java.lang.StringBuilder.toString()')): [18, -9.181138753890991], (('DSubTree', 'java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.StringBuilder(java.lang.String)', 'DLoop', 'java.util.Enumeration.hasMoreElements()', 'java.lang.StringBuilder.append(java.lang.String)', 'DLoop'), (False, False, False, True, True, False, False), ('java.lang.String.String(java.lang.String)', 'java.lang.StringBuilder.StringBuilder(java.lang.String)', 'DLoop', 'java.util.Enumeration.hasMoreElements()', 'java.lang.StringBuilder.append(java.lang.String)', 'DStop', 'java.lang.StringBuilder.toString()')): [13, -12.467200577259064]}

counter: 45
num skipped: 0
{'include': ['java.io.InputStream.read(byte[])', 'java.lang.String.String(byte[])'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.InputStream.read(byte[])'), (False, False), ('java.io.InputStream.read(byte[])', 'java.lang.String.String(byte[])')): [37, -7.155449092388153], (('DSubTree', 'java.io.InputStream.read(byte[])', 'java.lang.String.String(byte[])'), (False, False, False), ('java.io.InputStream.read(byte[])', 'java.lang.String.String(byte[])', 'java.lang.String.String(byte[])')): [4, -6.475518986582756], (('DSubTree', 'java.io.InputStream.read(byte[])', 'java.util.Arrays.equals(byte[],byte[])'), (False, False, False), ('java.io.InputStream.read(byte[])', 'java.util.Arrays.equals(byte[],byte[])', 'java.lang.String.String(byte[])')): [7, -4.830523490905762], (('DSubTree', 'java.io.InputStream.read(byte[])', 'java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)'), (False, False, False), ('java.io.InputStream.read(byte[])', 'java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)', 'java.lang.String.String(byte[])')): [2, -3.0387399196624756]}
