data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/final_novel_1k_min_2_small_config
num iterations: 60.0
category: include_api
label: novelty
num test programs: 1000

{'include': ['java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()'), (False, False, False), ('java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()', 'DStop')): [27, -23.613426320254803], (('DSubTree', 'java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()', 'java.lang.String.format(java.lang.String,java.lang.Object[])'), (False, False, False, False), ('java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()', 'java.lang.String.format(java.lang.String,java.lang.Object[])', 'DStop')): [27, -20.230827886611223], (('DSubTree', 'java.awt.event.MouseEvent.getY()', 'java.awt.event.MouseEvent.getClickCount()'), (False, False, False), ('java.awt.event.MouseEvent.getY()', 'java.awt.event.MouseEvent.getClickCount()', 'DStop')): [2, -17.061022095382214], (('DSubTree', 'java.awt.event.MouseEvent.getY()', 'javax.swing.JComponent.getWidth()', 'java.awt.event.MouseEvent.getClickCount()'), (False, False, False, False), ('java.awt.event.MouseEvent.getY()', 'javax.swing.JComponent.getWidth()', 'java.awt.event.MouseEvent.getClickCount()', 'DStop')): [4, -11.206045149367128]}

{'include': ['java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.FileInputStream.FileInputStream(java.io.File)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)'), (False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.FileInputStream.FileInputStream(java.io.File)')): [10, -8.422035574913025], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.File.getCanonicalPath()'), (False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.io.FileInputStream.FileInputStream(java.io.File)')): [6, -9.125697016716003], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()'), (False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)')): [7, -10.182313859462738], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)'), (False, False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'DStop')): [7, -10.494598150253296], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.InputStream.close()')): [11, -9.6887047290802], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.FileInputStream.close()')): [11, -10.957042396068573], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False, False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayOutputStream.close()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.FileInputStream.close()')): [4, -15.396462857723236], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayOutputStream.close()', 'java.io.File.toPath()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False, False, False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayOutputStream.close()', 'java.io.File.toPath()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.FileInputStream.close()')): [3, -22.39457279443741], (('DSubTree', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayOutputStream.close()', 'java.io.File.toPath()', 'java.io.FileInputStream.FileInputStream(java.io.File)'), (False, False, False, False, False, False), ('java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayOutputStream.close()', 'java.io.File.toPath()', 'java.io.FileInputStream.FileInputStream(java.io.File)', 'java.io.FileInputStream.close()')): [1, -14.760520815849304]}

{'include': ['java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.lang.String.split(java.lang.String)'), (False, False), ('java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()')): [6, -16.299185752868652], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()'), (False, False, False), ('java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()', 'DStop')): [10, -11.70664656162262], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()', '$NOT$java.lang.String.equals(java.lang.Object)'), (False, False, False, False), ('java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()', '$NOT$java.lang.String.equals(java.lang.Object)', 'DStop')): [7, -15.030215224251151], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()'), (False, False, False), ('java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()', '$NOT$java.lang.String.equals(java.lang.Object)')): [20, -14.793881058692932], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()'), (False, False, False), ('java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.await()', 'java.lang.String.contains(java.lang.CharSequence)')): [5, -11.172433078289032], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.CountDownLatch(int)'), (False, False, False), ('java.lang.String.split(java.lang.String)', 'java.util.concurrent.CountDownLatch.CountDownLatch(int)', 'java.util.concurrent.CountDownLatch.await()')): [4, -12.87614518404007], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.lang.String.trim()', 'java.util.concurrent.CountDownLatch.CountDownLatch(int)'), (False, False, False, False), ('java.lang.String.split(java.lang.String)', 'java.lang.String.trim()', 'java.util.concurrent.CountDownLatch.CountDownLatch(int)', 'java.util.concurrent.CountDownLatch.await()')): [1, -12.509159490466118], (('DSubTree', 'java.lang.String.split(java.lang.String)', 'java.lang.System.nanoTime()', 'java.lang.String.trim()', 'java.util.concurrent.CountDownLatch.CountDownLatch(int)'), (False, False, False, False, False), ('java.lang.String.split(java.lang.String)', 'java.lang.System.nanoTime()', 'java.lang.String.trim()', 'java.util.concurrent.CountDownLatch.CountDownLatch(int)', 'java.util.concurrent.CountDownLatch.await()')): [7, -14.844314098358154]}