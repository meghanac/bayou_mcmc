data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/novel_1k_data_small_config
num iterations: 50.0
category: include_api
label: novelty
num test programs: 100


counter: 0
num skipped: 0
{'include': ['java.util.Map<java.lang.String,byte[]>.entrySet()', 'java.util.Map<java.lang.String,java.lang.String>.put(java.lang.String,java.lang.String)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.util.Map<java.lang.String,byte[]>.entrySet()'), (False, False), ('java.util.Map<java.lang.String,byte[]>.entrySet()', 'java.util.Map<java.lang.String,java.lang.String>.put(java.lang.String,java.lang.String)')): [23, -6.313479278236628], (('DSubTree', 'java.util.Map<java.lang.String,byte[]>.entrySet()', 'java.util.Map<java.lang.String,java.lang.String>.put(java.lang.String,java.lang.String)'), (False, False, False), ('java.util.Map<java.lang.String,byte[]>.entrySet()', 'java.util.Map<java.lang.String,java.lang.String>.put(java.lang.String,java.lang.String)', 'DStop')): [27, -3.4949301220476627]}

counter: 5
num skipped: 0
{'include': ['java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.Thread.Thread(java.lang.Runnable)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)'), (False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.Thread.Thread(java.lang.Runnable)')): [1, -5.286490395665169], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashSet<Tau_E>.HashSet()'), (False, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashSet<Tau_E>.HashSet()', 'java.lang.Thread.Thread(java.lang.Runnable)')): [4, -7.50691744685173], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.System.currentTimeMillis()'), (False, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.System.currentTimeMillis()', 'java.lang.Thread.Thread(java.lang.Runnable)')): [9, -6.569254159927368], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.System.currentTimeMillis()', 'java.lang.Thread.Thread(java.lang.Runnable)'), (False, False, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.System.currentTimeMillis()', 'java.lang.Thread.Thread(java.lang.Runnable)', 'DStop')): [18, -6.542047023773193], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.Thread.Thread(java.lang.Runnable)'), (False, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.lang.Thread.Thread(java.lang.Runnable)', 'DStop')): [3, -1.8018310219049454], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashMap<Tau_K,Tau_V>.HashMap()', 'java.lang.Thread.Thread(java.lang.Runnable)'), (False, False, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashMap<Tau_K,Tau_V>.HashMap()', 'java.lang.Thread.Thread(java.lang.Runnable)', 'DStop')): [5, -9.447697166353464], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashMap<Tau_K,Tau_V>.HashMap()', 'java.lang.Thread.Thread(java.lang.Runnable)', 'java.lang.Thread.start()'), (False, False, False, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashMap<Tau_K,Tau_V>.HashMap()', 'java.lang.Thread.Thread(java.lang.Runnable)', 'java.lang.Thread.start()', 'DStop')): [2, -9.404676735401154], (('DSubTree', 'java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashMap<Tau_K,Tau_V>.HashMap()', 'java.lang.Thread.Thread(java.lang.Runnable)', 'java.lang.Thread.start()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.concurrent.CountDownLatch.await()', 'DExcept'), (False, False, False, False, False, True, True, False, False), ('java.util.concurrent.Semaphore.Semaphore(int)', 'java.util.HashMap<Tau_K,Tau_V>.HashMap()', 'java.lang.Thread.Thread(java.lang.Runnable)', 'java.lang.Thread.start()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.util.concurrent.CountDownLatch.await()', 'DStop', 'DStop')): [8, -11.054913595784456]}

counter: 10
num skipped: 0
{'include': ['java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.BufferedReader.readLine()'), (False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()')): [5, -9.152969121932983], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()'), (False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()', 'java.lang.String.endsWith(java.lang.String)')): [17, -9.050860285758972], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()'), (False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()', 'java.util.Map<java.lang.String,java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)')): [2, -15.44802737236023], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()'), (False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getCanonicalPath()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', 'java.util.Map<java.lang.String,java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)')): [3, -20.70266544818878], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', 'java.io.File.getCanonicalPath()'), (False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', 'java.io.File.getCanonicalPath()', 'java.util.Map<java.lang.String,java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)')): [1, -21.191352605819702], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', '$NOT$java.lang.String.equals(java.lang.Object)'), (False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.util.Map<java.lang.String,java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)')): [11, -24.638821125030518], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()'), (False, False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getName()', 'java.io.File.getCanonicalPath()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.util.Map<java.lang.String,java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)')): [1, -27.036462903022766], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getName()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()'), (False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getName()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.util.Map<java.lang.String,java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)')): [1, -28.186419010162354], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getName()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()'), (False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getName()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'DStop')): [1, -20.993865728378296], (('DSubTree', 'java.io.BufferedReader.readLine()', 'java.io.File.getName()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.io.File.length()'), (False, False, False, False, False, False), ('java.io.BufferedReader.readLine()', 'java.io.File.getName()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.io.File.length()', 'DStop')): [1, -22.4078968167305], (('DSubTree', 'java.io.File.getName()', 'java.io.BufferedReader.readLine()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.io.File.length()'), (False, False, False, False, False, False), ('java.io.File.getName()', 'java.io.BufferedReader.readLine()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.io.File.length()', 'DStop')): [1, -16.93249922990799], (('DSubTree', 'java.io.File.getName()', 'java.io.BufferedReader.readLine()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()'), (False, False, False, False, False), ('java.io.File.getName()', 'java.io.BufferedReader.readLine()', '$NOT$java.lang.String.equals(java.lang.Object)', 'java.io.File.getCanonicalPath()', 'java.io.File.length()')): [6, -14.9026238322258]}

counter: 15
num skipped: 0
{'include': ['java.io.ObjectOutputStream.close()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.ObjectOutputStream.close()'), (False, False), ('java.io.ObjectOutputStream.close()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)')): [1, -21.175591945648193], (('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)'), (False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()')): [2, -20.02375602722168], (('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()'), (False, False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DStop')): [5, -18.319461584091187], (('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.String.trim()', 'DExcept'), (False, False, False, True, True, False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.lang.String.trim()', 'DStop', 'DStop')): [15, -25.649848078144714], (('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.InputStream.close()', 'DExcept'), (False, False, False, True, True, False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.InputStream.close()', 'DStop', 'DStop')): [22, -21.963395322090946], (('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.StringReader.StringReader(java.lang.String)', 'DExcept'), (False, False, False, True, True, False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()', 'DExcept', 'java.lang.Throwable.printStackTrace()', 'java.io.StringReader.StringReader(java.lang.String)', 'DStop', 'DStop')): [5, -21.013397847331362]}

counter: 20
num skipped: 0
{'include': ['java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.net.Socket.getInputStream()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)'), (False, False), ('java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.net.Socket.getInputStream()')): [12, -8.523190021514893], (('DSubTree', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.net.Socket.getInputStream()'), (False, False, False), ('java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.net.Socket.getInputStream()', 'DStop')): [6, -13.85617470741272], (('DSubTree', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.net.Socket.getInputStream()'), (False, False, False), ('java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.net.Socket.getInputStream()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)')): [10, -7.637121394276619], (('DSubTree', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.File.File(java.lang.String)', 'java.net.Socket.getInputStream()'), (False, False, False, False), ('java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.File.File(java.lang.String)', 'java.net.Socket.getInputStream()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)')): [22, -12.705984771251678]}
