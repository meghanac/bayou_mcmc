data dir name: new_all_data_1k_vocab_no_duplicates
model dir path: ../trainer_vae/save/novel_1k_data_med_config
num iterations: 50.0
category: include_api
label: novelty
num test programs: 5


counter: 0
num skipped: 0
{'include': ['java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.awt.event.MouseEvent.getClickCount()'), (False, False), ('java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()')): [2, -22.380955457687378], (('DSubTree', 'java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()'), (False, False, False), ('java.awt.event.MouseEvent.getClickCount()', 'java.awt.event.MouseEvent.getY()', 'DStop')): [38, -20.441697008907795], (('DSubTree', 'java.awt.event.MouseEvent.getY()', 'java.awt.event.MouseEvent.getClickCount()'), (False, False, False), ('java.awt.event.MouseEvent.getY()', 'java.awt.event.MouseEvent.getClickCount()', 'DStop')): [10, -18.9390302952379]}

counter: 1
num skipped: 0
{'include': ['java.net.ServerSocket.ServerSocket(int)', 'java.io.PrintWriter.PrintWriter(java.io.OutputStream,boolean)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.net.ServerSocket.ServerSocket(int)'), (False, False), ('java.net.ServerSocket.ServerSocket(int)', 'java.io.PrintWriter.PrintWriter(java.io.OutputStream,boolean)')): [3, -9.304102182388306], (('DSubTree', 'java.net.ServerSocket.ServerSocket(int)', 'java.io.PrintWriter.PrintWriter(java.io.OutputStream,boolean)'), (False, False, False), ('java.net.ServerSocket.ServerSocket(int)', 'java.io.PrintWriter.PrintWriter(java.io.OutputStream,boolean)', 'DStop')): [17, -6.0075569450855255], (('DSubTree', 'java.net.ServerSocket.ServerSocket(int)', 'java.io.BufferedOutputStream.BufferedOutputStream(java.io.OutputStream)', 'java.io.PrintWriter.PrintWriter(java.io.OutputStream,boolean)'), (False, False, False, False), ('java.net.ServerSocket.ServerSocket(int)', 'java.io.BufferedOutputStream.BufferedOutputStream(java.io.OutputStream)', 'java.io.PrintWriter.PrintWriter(java.io.OutputStream,boolean)', 'DStop')): [30, -5.303501933347434]}

counter: 2
num skipped: 0
{'include': ['java.nio.ByteBuffer.asFloatBuffer()', 'java.nio.FloatBuffer.put(float[])'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.nio.ByteBuffer.asFloatBuffer()'), (False, False), ('java.nio.ByteBuffer.asFloatBuffer()', 'java.nio.FloatBuffer.put(float[])')): [3, -25.41450309753418], (('DSubTree', 'java.nio.ByteBuffer.asFloatBuffer()', 'java.nio.FloatBuffer.put(float[])'), (False, False, False), ('java.nio.ByteBuffer.asFloatBuffer()', 'java.nio.FloatBuffer.put(float[])', 'DStop')): [11, -21.878093511797488], (('DSubTree', 'java.nio.FloatBuffer.put(float[])', 'java.nio.ByteBuffer.asFloatBuffer()'), (False, False, False), ('java.nio.FloatBuffer.put(float[])', 'java.nio.ByteBuffer.asFloatBuffer()', 'DStop')): [35, -18.455200269818306], (('DSubTree', 'java.nio.FloatBuffer.put(float[])'), (False, False), ('java.nio.FloatBuffer.put(float[])', 'java.nio.ByteBuffer.asFloatBuffer()')): [1, -14.580988764762878]}

counter: 3
num skipped: 0
{'include': ['java.io.File.File(java.io.File,java.lang.String)', '$NOT$java.io.File.getAbsoluteFile()'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.File.File(java.io.File,java.lang.String)'), (False, False), ('java.io.File.File(java.io.File,java.lang.String)', '$NOT$java.io.File.getAbsoluteFile()')): [50, -4.3450678288936615]}

counter: 4
num skipped: 0
{'include': ['java.io.ObjectOutputStream.close()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)'], 'exclude': [], 'min_length': 1, 'max_length': inf}
{(('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)'), (False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()')): [1, -20.884938716888428], (('DSubTree', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False), ('java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectOutputStream.close()')): [1, -21.50539255142212], (('DSubTree', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)'), (False, False, False), ('java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.close()')): [9, -16.612067937850952], (('DSubTree', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)'), (False, False, False, False), ('java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.close()')): [1, -18.137790620326996], (('DSubTree', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.close()'), (False, False, False, False, False), ('java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.close()', 'java.io.ByteArrayOutputStream.toByteArray()')): [11, -9.485503315925598], (('DSubTree', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.close()', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False, False, False, False), ('java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.close()', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])')): [19, -11.849480152130127], (('DSubTree', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ObjectOutputStream.close()', 'java.io.ByteArrayOutputStream.toByteArray()'), (False, False, False, False, False, False, False), ('java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)', 'java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)', 'java.io.ObjectOutputStream.writeObject(java.lang.Object)', 'java.io.ObjectOutputStream.close()', 'java.io.ByteArrayOutputStream.toByteArray()', 'java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])')): [8, -12.59054670482874]}


final metrics: {'jaccard_test_set': 0.0, 'has_more_apis': 0.4, 'relevant_additions': 0.4, 'meets_constraints': 1.0, 'in_set': 0.0, 'test_set_relevant_additions': 0.4}
